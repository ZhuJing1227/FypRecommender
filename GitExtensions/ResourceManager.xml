<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ResourceManager</name>
    </assembly>
    <members>
        <member name="T:ResourceManager.CommitDataRenders.ICommitDataBodyRenderer">
            <summary>
            Provides the ability to render the body of a commit message.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.ICommitDataBodyRenderer.Render(GitCommands.CommitData,System.Boolean)">
            <summary>
            Render the body of a commit message.
            </summary>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.CommitDataBodyRenderer">
            <summary>
            Renders the body of a commit message.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.CommitDataBodyRenderer.Render(GitCommands.CommitData,System.Boolean)">
            <summary>
            Render the body of a commit message.
            </summary>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.ICommitDataHeaderRenderer">
            <summary>
            Provides the ability to render commit information.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.ICommitDataHeaderRenderer.Render(GitCommands.CommitData,System.Boolean)">
            <summary>
            Generate header.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.ICommitDataHeaderRenderer.RenderPlain(GitCommands.CommitData)">
            <summary>
            Generate header.
            </summary>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.CommitDataHeaderRenderer">
            <summary>
            Renders commit information in a tabular format with data columns aligned with spaces.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.CommitDataHeaderRenderer.Render(GitCommands.CommitData,System.Boolean)">
            <summary>
            Generate header.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.CommitDataHeaderRenderer.RenderPlain(GitCommands.CommitData)">
            <summary>
            Generate header.
            </summary>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.IDateFormatter.FormatDateAsRelativeLocal(System.DateTimeOffset)">
            <summary>
            Formats the supplied date as relative local date (e.g. 3 months ago (10/9/17 4:38:40 pm)).
            </summary>
            <param name="date">Date to format.</param>
            <returns>Date in relative local date format.</returns>
        </member>
        <member name="M:ResourceManager.CommitDataRenders.DateFormatter.FormatDateAsRelativeLocal(System.DateTimeOffset)">
            <summary>
            Formats the supplied date as relative local date (e.g. 3 months ago (10/9/17 4:38:40 pm)).
            </summary>
            <param name="date">Date to format.</param>
            <returns>Date in relative local date format.</returns>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.MonospacedHeaderLabelFormatter">
            <summary>
            Formats the commit information heading labels with spaces.
            </summary>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.MonospacedHeaderRenderStyleProvider">
            <summary>
            Renders commit information in a tabular format with data columns aligned with spaces.
            </summary>
        </member>
        <member name="T:ResourceManager.CommitDataRenders.TabbedHeaderLabelFormatter">
            <summary>
            Formats the commit information heading labels with tabs.
            </summary>
        </member>
        <member name="T:ResourceManager.GitExtensionsControl">
            <summary>Provides translation and hotkey plumbing for GitEx <see cref="T:System.Windows.Forms.UserControl"/>s.</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsControl.InitializeComplete">
            <summary>Performs post-initialisation tasks such as translation.</summary>
            <remarks>
            <para>Subclasses must ensure this method is called in their constructor, ideally as the final statement.</para>
            <para>Requiring this extra life-cycle event allows preparing the UI after any call to <c>InitializeComponent</c>,
            but before it is show. The <see cref="E:System.Windows.Forms.UserControl.Load"/> event occurs too late for operations that effect layout.</para>
            </remarks>
        </member>
        <member name="P:ResourceManager.GitExtensionsControl.HotkeysEnabled">
            <summary>Gets or sets a value that specifies if the hotkeys are used</summary>
        </member>
        <member name="P:ResourceManager.GitExtensionsControl.Hotkeys">
            <summary>Gets or sets the hotkeys</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Checks if a hotkey wants to handle the key before letting the message propagate.</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsControl.ExecuteCommand(System.Int32)">
            <summary>
            Override this method to handle form-specific Hotkey commands.
            <remarks>This base method does nothing and returns a <see cref="T:GitCommands.CommandStatus"/>
            with <see cref="P:GitCommands.CommandStatus.Executed"/> set to <see langword="false"/></remarks>
            </summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsControl.IsTextEditKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Returns whether the given [combination of] key[s] represents a keypress which is used for text input by default.
            <remarks>Can be used to ignore hotkeys which would prevent from typing text into an input control if it's focused.</remarks>
            </summary>
            <param name="multiLine">Should be set to true for multi-line input controls to match keys for vertical movement, too.</param>
        </member>
        <member name="F:ResourceManager.GitExtensionsControlInitialiser._initialiseCompleteCalled">
            <summary>indicates whether the initialisation has been signalled as complete.</summary>
        </member>
        <member name="P:ResourceManager.GitExtensionsControlInitialiser.IsDesignModeActive">
            <summary>Indicates whether code is running as part of an IDE designer, such as the WinForms designer.</summary>
        </member>
        <member name="T:ResourceManager.GitExtensionsFormBase">
            <summary>
            Base class for all Git Extensions forms.
            </summary>
            <remarks>
            Deriving from this class requires a call to <see cref="M:ResourceManager.GitExtensionsFormBase.InitializeComplete"/> at
            the end of the constructor. Omitting this call with result in a runtime exception.
            </remarks>
        </member>
        <member name="M:ResourceManager.GitExtensionsFormBase.#ctor">
            <summary>Creates a new <see cref="T:ResourceManager.GitExtensionsFormBase"/> indicating position restore.</summary>
        </member>
        <member name="P:ResourceManager.GitExtensionsFormBase.HotkeysEnabled">
            <summary>Gets or sets a value that specifies if the hotkeys are used</summary>
        </member>
        <member name="P:ResourceManager.GitExtensionsFormBase.Hotkeys">
            <summary>Gets or sets the hotkeys</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsFormBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Overridden: Checks if a hotkey wants to handle the key before letting the message propagate</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsFormBase.ExecuteCommand(System.Int32)">
            <summary>Override this method to handle form-specific Hotkey commands.</summary>
        </member>
        <member name="M:ResourceManager.GitExtensionsFormBase.InitializeComplete">
            <summary>Performs post-initialisation tasks such as translation and DPI scaling.</summary>
            <remarks>
            <para>Subclasses must ensure this method is called in their constructor, ideally as the final statement.</para>
            <para>Requiring this extra life-cycle event allows preparing the UI after any call to <c>InitializeComponent</c>,
            but before it is show. Both the <see cref="E:System.Windows.Forms.Form.Load"/> and <see cref="E:System.Windows.Forms.Form.Shown"/> events occur too late for
            operations that effect layout.</para>
            </remarks>
        </member>
        <member name="M:ResourceManager.GitExtensionsFormBase.OnApplicationActivated">
            <summary>
            Notifies whenever the application becomes active.
            </summary>
        </member>
        <member name="M:ResourceManager.GitPluginBase.Execute(GitUIPluginInterfaces.GitUIEventArgs)">
            <summary>
            Run the plugin Execute method
            </summary>
            <param name="args">arguments from the UI</param>
            <returns>true, if the revision grid need a refresh
            false, otherwise </returns>
        </member>
        <member name="T:ResourceManager.ITranslate">
            <summary>Provides translation capabilities.</summary>
        </member>
        <member name="M:ResourceManager.ITranslate.TranslateItems(ResourceManager.ITranslation)">
            <summary>Translates all (translatable) items.</summary>
        </member>
        <member name="M:ResourceManager.LocalizationHelpers.GetRelativeDateString(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Takes a date/time which and determines a friendly string for time from now to be displayed for the relative time from the date.
            It is important to note that times are compared using the current timezone, so the date that is passed in should be converted
            to the local timezone before passing it in.
            </summary>
            <param name="originDate">Current date.</param>
            <param name="previousDate">The date to get relative time string for.</param>
            <param name="displayWeeks">Indicates whether to display weeks.</param>
            <returns>The human readable string for relative date.</returns>
            <see href="http://stackoverflow.com/questions/11/how-do-i-calculate-relative-time"/>
        </member>
        <member name="T:ResourceManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ResourceManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ResourceManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ResourceManager.Properties.Resources.GitExtensionsLogoIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:ResourceManager.Strings">
            <summary>Contains common string literals which are translated.</summary>
        </member>
        <member name="T:ResourceManager.Translate">
            <summary>Provides translation capabilities.</summary>
        </member>
        <member name="T:ResourceManager.TranslationString">
            <summary>Provides translated text.</summary>
        </member>
        <member name="M:ResourceManager.TranslationString.#ctor(System.String)">
            <summary>Creates a new <see cref="T:ResourceManager.TranslationString"/> with the specified <paramref name="text"/>.</summary>
        </member>
        <member name="P:ResourceManager.TranslationString.Text">
            <summary>Gets the translated text.</summary>
            <remarks>Setter is required because this property is set via reflection by the translation engine.</remarks>
        </member>
        <member name="M:ResourceManager.TranslationString.ToString">
            <summary>Returns <see cref="P:ResourceManager.TranslationString.Text"/> value.</summary>
        </member>
        <member name="T:ResourceManager.Xliff.TranslationFile">
            <summary>Provides a translation for a specific language.</summary>
        </member>
        <member name="T:ResourceManager.Xliff.TranslationSerializer">
            <summary>Serializes and deserialize a <see cref="T:ResourceManager.Xliff.TranslationFile"/>.</summary>
        </member>
        <member name="M:ResourceManager.Xliff.TranslationUtil.IsTranslatable(System.Reflection.Assembly)">
            <summary>true if the specified <see cref="T:System.Reflection.Assembly"/> may be translatable.</summary>
        </member>
    </members>
</doc>
