<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GitUI</name>
    </assembly>
    <members>
        <member name="T:GitUI.Avatars.AvatarDownloader">
            <summary>
            Helps downloading avatar images and implements concurrent requests and automatic retries.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.AvatarMemoryCache">
            <summary>
            Caches most-recently-used images.
            </summary>
            <remarks>
            <para>Decorates an inner cache, delegating to it as needed.</para>
            <para>If an image is available in memory, the inner cache can be bypassed.</para>
            </remarks>
        </member>
        <member name="E:GitUI.Avatars.AvatarMemoryCache.CacheCleared">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.AvatarMemoryCache.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.AvatarMemoryCache.ClearCacheAsync">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.AvatarService.UpdateAvatarProvider">
            <summary>
            Updates the internal avatar provider chain to
            reflect the current active (according to <see cref="T:GitCommands.AppSettings"/> provider.
            </summary>
        </member>
        <member name="M:GitUI.Avatars.AvatarService.CreateAvatarProvider(GitCommands.AvatarProvider,System.Nullable{GitCommands.AvatarFallbackType},GitUI.Avatars.IAvatarDownloader)">
            <summary>
            Creates an <see cref="T:GitUI.Avatars.IAvatarProvider"/> based on the given
            <see cref="T:GitCommands.AvatarProvider"/> and <see cref="T:GitCommands.AvatarFallbackType"/> enum options.
            </summary>
            <returns>Returns an avatar provider that can be used to resolve user avatars.</returns>
        </member>
        <member name="T:GitUI.Avatars.ChainedAvatarProvider">
            <summary>
            An avatar provider that combines mutliple avatar providers.
            </summary>
        </member>
        <member name="M:GitUI.Avatars.ChainedAvatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <summary>
            Gets an avatar images from multiple avatar providers and returns the first hit.
            The providers are queried in the same order that was given during construction.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.CustomAvatarProvider">
            <summary>
            The custom avatar provider allows the user to define one or more custom providers that
            are queried in order until an avatar image is found.
            </summary>
            <remarks>
            Details about the usage and syntax of the custom avatar provider can be found in the gitextensions wiki.
            </remarks>
        </member>
        <member name="M:GitUI.Avatars.CustomAvatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.Avatars.CustomAvatarProvider.ParseTemplateString(System.String,GitUI.Avatars.IAvatarDownloader)">
            <summary>
            Parses a custom avatar template string and creates an <see cref="T:GitUI.Avatars.IAvatarProvider"/> from it.
            </summary>
            <param name="customProviderTemplates">The custom avatar provider template.</param>
            <param name="downloader">The downloader that is used to download avatar images.</param>
            <returns>Returns the <see cref="T:GitUI.Avatars.IAvatarProvider"/> described by the template.</returns>
        </member>
        <member name="M:GitUI.Avatars.CustomAvatarProvider.FromTemplateSegment(GitUI.Avatars.IAvatarDownloader,System.String)">
            <summary>
            Parses a single template segment.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.CustomAvatarProvider.UriTemplateData">
            <summary>
            A type that holds and prepares for variables in custom avatar templates.
            It's processed by an <see cref="T:GitUI.Avatars.CustomAvatarProvider.UriTemplateResolver"/>.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.CustomAvatarProvider.UriTemplateResolver">
            <summary>
            An avatar provider that takes <see cref="T:GitUI.Avatars.CustomAvatarProvider.UriTemplateData"/> as input to provide <see cref="T:System.Uri"/>s.
            </summary>
            <remarks>
            The template resolver claims to be an <see cref="T:GitUI.Avatars.IAvatarProvider"/> but that's not really true.
            It only implements the interface to allow the parent class <see cref="T:GitUI.Avatars.CustomAvatarProvider"/> to
            store providers of two different types without using <see cref="T:System.Object"/> as base type.
            A cleaner alternative would be for <see cref="T:GitUI.Avatars.CustomAvatarProvider"/> to use a discriminated union,
            but sadly C# doesn't offer them at the moment and external dependency just for that case
            would probably be overkill.
            </remarks>
        </member>
        <member name="M:GitUI.Avatars.CustomAvatarProvider.UriTemplateResolver.ResolveTemplate(GitUI.Avatars.CustomAvatarProvider.UriTemplateData)">
            <summary>
            Resolves and returns a <see cref="T:System.Uri"/> based on the template given
            during construction and the data provided for <paramref name="templateData"/>.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.FileSystemAvatarCache">
            <summary>
            Decorates an avatar provider, adding persistent caching to the file system.
            </summary>
        </member>
        <member name="E:GitUI.Avatars.FileSystemAvatarCache.CacheCleared">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.FileSystemAvatarCache.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.FileSystemAvatarCache.ClearCacheAsync">
            <inheritdoc />
        </member>
        <member name="M:GitUI.Avatars.GravatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.Avatars.HexString.FromByteArray(System.Byte[])">
            <summary>
            Converts a byte array into its lowercase hex representation.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.HotSwapAvatarProvider">
            <summary>
            A helper provider that wraps another avatar provider.
            </summary>
            <remarks>
            The wrapper is used to support hot swapping (changing a provider without changing the reference of the root provider)
            It also catches and logs exceptions and works as a simple NullProvider if <see cref="P:GitUI.Avatars.HotSwapAvatarProvider.Provider"/> is not set (set to null).
            </remarks>
        </member>
        <member name="P:GitUI.Avatars.HotSwapAvatarProvider.Provider">
            <summary>
            Gets or sets the currently active provider.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.IAvatarCacheCleaner">
            <summary>
            Allows the consumer to clear a cache.
            </summary>
        </member>
        <member name="E:GitUI.Avatars.IAvatarCacheCleaner.CacheCleared">
            <summary>
            Raised after <see cref="M:GitUI.Avatars.IAvatarCacheCleaner.ClearCacheAsync"/> is finished clearing the cache.
            </summary>
        </member>
        <member name="M:GitUI.Avatars.IAvatarCacheCleaner.ClearCacheAsync">
            <summary>
            Clears any cached content before raising <see cref="E:GitUI.Avatars.IAvatarCacheCleaner.CacheCleared"/>.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.IAvatarProvider">
            <summary>
            A source and cache agnostic provider for avatar images.
            </summary>
        </member>
        <member name="M:GitUI.Avatars.IAvatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <summary>
            Provides the avatar image for the associated email at the requested size.
            </summary>
        </member>
        <member name="T:GitUI.Avatars.InitialsAvatarProvider">
            <summary>
            A provider that generates avatar images based on the initials of the user.
            </summary>
        </member>
        <member name="M:GitUI.Avatars.InitialsAvatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:GitUI.Avatars.MultiCacheCleaner">
            <summary>
            Wraps multiple caches and clears all of them with a single call.
            </summary>
        </member>
        <member name="E:GitUI.Avatars.MultiCacheCleaner.CacheCleared">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.Avatars.MultiCacheCleaner.ClearCacheAsync">
            <inheritdoc/>
        </member>
        <member name="T:GitUI.Avatars.SafetynetAvatarProvider">
             <summary>
             A provider proxy that makes sure that the requested image size is reasonable.
             </summary>
             <remarks>
             If the image size is less than one it will be set to a default value (64px)
             and the upper size is limited to 512px to prevent unreasonable avatar sizes.
            
             If the inner provider crashes or returns null an "emergency fallback" is provided.
             </remarks>
        </member>
        <member name="M:GitUI.Avatars.StaticImageAvatarProvider.GetAvatarAsync(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:GitUI.Avatars.TemplateFormatter">
            <summary>
            A helper that is used to process templates like "Hello {variable}!".
            </summary>
        </member>
        <member name="M:GitUI.Avatars.TemplateFormatter.Create``1(System.String,System.Func{System.String,System.Func{``0,System.String}})">
            <summary>
            Creates a formatter based on a <paramref name="template"/> and a <paramref name="valueMapperProvider"/>.
            </summary>
            <param name="template">The template used to generate the formatter.</param>
            <param name="valueMapperProvider">Supplies requested values by providing conversion functions from <typeparamref name="TInput"/> to string.</param>
            <remarks>
            The returned formatter can be reused to format different inputs. It basically generates
            a custom StringBuilder from the template
            </remarks>
        </member>
        <member name="M:GitUI.Avatars.TemplateFormatter.FormatExecute``1(``0,System.Collections.Generic.IEnumerable{System.Action{System.Text.StringBuilder,``0}})">
            <summary>
            Format a given input using multiple format parts.
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.ContextMenu.IMenuItemFactory.CreateMenuItem``2(System.Action{``1},ResourceManager.TranslationString,ResourceManager.TranslationString,System.Drawing.Bitmap)">
            <summary>
            Creates a menu item control
            </summary>
            <typeparam name="TMenuItem">The menu item control type</typeparam>
            <typeparam name="TNode">The node type (branch, tag etc)</typeparam>
            <param name="onClick">The action to execute on click</param>
            <param name="text">The menu item text</param>
            <param name="toolTip">Menu item tooltip</param>
            <param name="icon">The image to show on the menu item</param>
            <returns>A new instance of the menu item control</returns>
        </member>
        <member name="T:GitUI.BranchTreePanel.ContextMenu.IMenuItemsGenerator`1">
            <summary>
            Builds context menu actions for a <see cref="T:GitUI.BranchTreePanel.Interfaces.INode"/> depending on declared interfaces
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.ContextMenu.LocalBranchMenuItems`1.GetInactiveBranchItems">
            <summary>
            Filter menu entries that depend on the branch being active or not
            </summary>
        </member>
        <member name="T:GitUI.BranchTreePanel.ContextMenu.MenuItemKey">
            <summary>
            Menu items that can be generated by <see cref="T:GitUI.BranchTreePanel.ContextMenu.IMenuItemsGenerator`1"/>
            </summary>
        </member>
        <member name="F:GitUI.BranchTreePanel.ContextMenu.MenuItemsStrings.Checkout">
            <see cref="T:GitUI.BranchTreePanel.Interfaces.IGitRefActions"/>
        </member>
        <member name="F:GitUI.BranchTreePanel.ContextMenu.MenuItemsStrings.Rename">
            <see cref="T:GitUI.BranchTreePanel.Interfaces.ICanRename"/>
        </member>
        <member name="F:GitUI.BranchTreePanel.ContextMenu.MenuItemsStrings.Delete">
            <see cref="T:GitUI.BranchTreePanel.Interfaces.ICanDelete"/>
        </member>
        <member name="T:GitUI.BranchTreePanel.Interfaces.INode">
            <summary>
            Used only to hide <see cref="T:GitUI.BranchTreePanel.RepoObjectsTree.Node"/> for unit tests
            </summary>
        </member>
        <member name="F:GitUI.BranchTreePanel.RepoObjectsTree._localBranchMenuItems">
            <summary>
            Local branch context menu [git ref / rename / delete] actions
            </summary>
        </member>
        <member name="F:GitUI.BranchTreePanel.RepoObjectsTree._remoteBranchMenuItems">
            <summary>
            Remote branch context menu [git ref / rename / delete] actions
            </summary>
        </member>
        <member name="F:GitUI.BranchTreePanel.RepoObjectsTree._tagNodeMenuItems">
            <summary>
            Tags context menu [git ref] actions
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.CreateMenuItem``2(System.Action{``1},ResourceManager.TranslationString,ResourceManager.TranslationString,System.Drawing.Bitmap)">
            <inheritdoc />
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.ToggleFilterMode(System.Boolean)">
            <summary>
            Toggles filtering mode on or off to the git refs present in the left panel depending on the app's global filtering rules .
            These rules include: show all branches / show current branch / show filtered branches, etc.
            </summary>
            <param name="isFiltering">
             <see langword="true"/>, if the data is being filtered; otherwise <see langword="false"/>.
            </param>
        </member>
        <member name="F:GitUI.BranchTreePanel.RepoObjectsTree.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.BranchTreePanel.RepoObjectsTree.BaseBranchNode.Name">
            <summary>
            Short name of the branch/branch path. <example>"issue1344"</example>.
            </summary>
        </member>
        <member name="P:GitUI.BranchTreePanel.RepoObjectsTree.BaseBranchNode.FullPath">
            <summary>
            Full path of the branch. <example>"issues/issue1344"</example>.
            </summary>
        </member>
        <member name="P:GitUI.BranchTreePanel.RepoObjectsTree.BaseBranchNode.Visible">
            <summary>
            Gets whether the commit that the node represents is currently visible in the revision grid.
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.BranchTree.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Nodes.AddNode(GitUI.BranchTreePanel.RepoObjectsTree.Node)">
            <summary>
            Adds a new node to the collection.
            </summary>
            <param name="node">The node to add.</param>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Nodes.DepthEnumerator``1">
            <summary>
            Returns all nodes of a given TNode type using depth-first, pre-order method
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Nodes.FillTreeViewNode(System.Windows.Forms.TreeNode)">
            <summary>
            This function is responsible for building the TreeNode structure that matches this Nodes's
            structure, recursively. To avoid needlessly recreating TreeNodes, it recycles existing ones
            if they are considered equal, so it's important to implement Equals on Node classes.
            </summary>
        </member>
        <member name="P:GitUI.BranchTreePanel.RepoObjectsTree.Tree.IgnoreSelectionChangedEvent">
            <summary>
            A flag to indicate that node SelectionChanged event is not user-originated and
            must not trigger the event handling sequence.
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Tree.Refresh">
            <summary>
            Requests to refresh the data tree and to apply filtering, if necessary.
            </summary>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.Tree.ToggleFilterMode(System.Boolean)">
            <summary>
            Requests to refresh the data tree and to apply filtering, if necessary.
            </summary>
            <param name="isFiltering">
             <see langword="true"/>, if the data is being filtered; otherwise <see langword="false"/>.
            </param>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.RemoteBranchTree.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.TagTree.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.BranchTreePanel.RepoObjectsTree.FixInvalidTreeToPositionIndices">
            <summary>
            We assume tree to position indices are 0-based and sequential. In case this
            is no longer true, because for e.g. user has reverted to an earlier version,
            this function will fix the indices, attempting to maintain the existing order.
            </summary>
        </member>
        <member name="T:GitUI.BrowseForPrivateKey">
            <summary>
            Shows a dialog to let the user browse for a SSH key.
            </summary>
        </member>
        <member name="M:GitUI.BrowseForPrivateKey.BrowseAndLoad(System.Windows.Forms.IWin32Window)">
            <summary>
            Prompts the user to browse for a key, and attempts to load it. Returns the path to the key, if successful.
            </summary>
        </member>
        <member name="M:GitUI.BrowseForPrivateKey.Browse(System.Windows.Forms.IWin32Window)">
            <summary>
            Prompts the user to browse for a key. Returns the path chosen, or null.
            </summary>
        </member>
        <member name="M:GitUI.BrowseForPrivateKey.LoadKey(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Tries to load the given key. Returns whether successful.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.Dashboard.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.Dashboard.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.Dashboard.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.FormDashboardCategoryTitle.Category">
            <summary>
            Gets the new category.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.FormDashboardCategoryTitle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.FormDashboardCategoryTitle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.FormDashboardCategoryTitle.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.UserRepositoriesList.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.UserRepositoriesList.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.DashboardControl.UserRepositoriesList.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormBisect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormBisect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormBisect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormChangeLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormChangeLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormChangeLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormDonate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormDonate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormDonate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormGitCommandLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormGitCommandLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormGitCommandLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormGoToCommit._selectedRevision">
            <summary>
            this will be used when Go() is called
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormGoToCommit.ValidateAndGetSelectedRevision">
            <summary>
            returns null if revision does not exist (could not be revparsed)
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormGoToCommit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormGoToCommit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormGoToCommit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormOpenDirectory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormOpenDirectory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormOpenDirectory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormRecentReposSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormRecentReposSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormRecentReposSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.FormUpdates.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormUpdates.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.FormUpdates.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.InteractiveUpdateDelay">
            <summary>
            We often change several files at once.
            Short delay before we try to get the status.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.FileChangedUpdateDelay">
            <summary>
            We often change several files at once.
            Wait a second so they're all changed before we try to get the status.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.MinUpdateInterval">
            <summary>
            Minimum interval between subsequent updates
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.PeriodicUpdateInterval">
            <summary>
            Update every 5min, just to make sure something didn't slip through the cracks.
            </summary>
        </member>
        <member name="E:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.GitStatusMonitorStateChanged">
            <summary>
            Occurs whenever git status monitor state changes.
            </summary>
        </member>
        <member name="E:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.GitWorkingDirectoryStatusChanged">
            <summary>
            Occurs whenever current working directory status changes.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.ScheduleNextUpdateTime(System.Int32)">
            <summary>
            Schedule a status update after the specified delay
            Do not change if a value is already set at a earlier time,
            but respect the minimal (dynamic) update times between updates
            </summary>
            <param name="delay">delay in milli seconds</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.GitStatusMonitor.ScheduleNextInteractiveTime">
            <summary>
            Schedule a status update from interactive changes (repo changed or refreshed)
            A short delay is added
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.GitWorkingDirectoryStatusEventArgs.ItemStatuses">
            <summary>
            the status of all modified files/submodules or null if the previous information is invalidated
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.BrowseDialog.MenuCommand">
             <summary>
             Represents a menu command with Text, ShortcutKey or ShortcutDisplayString, Action,
             Icon and optionally CheckBoxes.
             From a MenuCommand a (theoretically) unlimited number of actual ToolStripItems can
             be created that all behave the same.
             A MenuCommand can also be a separator
            
             Purpose: have methods from specific context menus also available in main menu
             </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.IsSeparator">
            <summary>
            if true all other properties have no meaning
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.Name">
            <summary>
            used for ToolStripItem and translation identification
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.Text">
            <summary>
            text of the menu item
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.ToolTipText">
            <summary>
            tooltip text of the menu item
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.Image">
            <summary>
            image of the menu item
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.ExecuteAction">
            <summary>
            execute on menu click
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.IsCheckedFunc">
            <summary>
            called if the menu item want to know if the Checked property
            should be true or false. If null then false.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.BrowseDialog.MenuCommand.RegisterMenuItem(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            To make the MenuCommand interact with all its associated menu items
            this method is used to register the all menu items that where generated by this MenuCommand
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.FormBrowseMenus">
            <summary>
            Add MenuCommands as menus to the FormBrowse main menu.
            This class is intended to have NO dependency to FormBrowse
              (if needed this kind of code should be done in FormBrowseMenuCommands).
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormBrowseMenus._mainMenuStrip">
            <summary>
            The menu to which we will be adding RevisionGrid command menus.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormBrowseMenus._toolStripContextMenu">
            <summary>
            The context menu that be shown to allow toggle visibilty of toolbars in <see cref="T:GitUI.CommandsDialogs.FormBrowse"/>.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowseMenus.CreateToolbarsMenus(GitUI.ToolStripEx[])">
            <summary>
            Creates menu items for each toolbar supplied in <paramref name="toolStrips"/>. These menus will
            be surfaced in <see cref="F:GitUI.CommandsDialogs.FormBrowseMenus._mainMenuStrip"/>, and <see cref="F:GitUI.CommandsDialogs.FormBrowseMenus._toolStripContextMenu"/>,
            and will allow to toggle visibility of the toolbars.
            </summary>
            <param name="toolStrips">The list of toobars to toggle visibility for.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowseMenus.AddMenuCommandSet(GitUI.CommandsDialogs.MainMenuItem,System.Collections.Generic.IEnumerable{GitUI.CommandsDialogs.BrowseDialog.MenuCommand})">
            <summary>
            Appends the provided <paramref name="menuCommands"/> list to the commands menus specified by <paramref name="mainMenuItem"/>.
            </summary>
            <remarks>
            Each new command set will be automatically separated by a separator.
            </remarks>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowseMenus.InsertRevisionGridMainMenuItems(System.Windows.Forms.ToolStripItem)">
            <summary>
            Inserts "Navigate" and "View" menus after the <paramref name="insertAfterMenuItem"/>.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowseMenus.CreateMenuItems">
            <summary>
            Creates menu items to be added to the main menu of the <see cref="T:GitUI.CommandsDialogs.FormBrowse"/>
            (represented by <see cref="F:GitUI.CommandsDialogs.FormBrowseMenus._mainMenuStrip"/>).
            </summary>
            <remarks>
            Call in ctor before translation.
            </remarks>
        </member>
        <member name="F:GitUI.CommandsDialogs.CommitDialog.FormCommitTemplateSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.CommitDialog.FormCommitTemplateSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.CommitDialog.FormCommitTemplateSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.DataGridViewCheckBoxHeaderCell._checkBoxArea">
            <summary>
            Relative check box location (from cellbounds).
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.EnvironmentInfo.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.EnvironmentInfo.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.EnvironmentInfo.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormAbout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAbout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAbout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormAddFiles.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAddFiles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAddFiles.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormAddToGitIgnore.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAddToGitIgnore.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormAddToGitIgnore.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormApplyPatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormApplyPatch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormApplyPatch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormArchive.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormArchive.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormArchive.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormatPatchDialog.SmtpCredentials.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormatPatchDialog.SmtpCredentials.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormatPatchDialog.SmtpCredentials.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowse.#ctor(GitUI.GitUICommands,System.String,GitUIPluginInterfaces.ObjectId,GitUIPluginInterfaces.ObjectId)">
            <summary>
            Open Browse - main GUI including dashboard
            </summary>
            <param name="commands">commands in the current form</param>
            <param name="filter">filter to apply to browse</param>
            <param name="selectedId">Currently (last) selected commit id</param>
            <param name="firstId">First selected commit id (as in a diff)</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowse.HideVariableMainMenuItems">
             <summary>
             to avoid showing menu items that should not be there during
             the transition from dashboard to repo browser and vice versa
            
             and reset hotkeys that are shared between mutual exclusive menu items
             </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowse.RefreshWorkingDirComboText">
            <summary>Updates the text shown on the combo button itself.</summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowse.FillTerminalTab">
            <summary>
            Adds a tab with console interface to Git over the current working copy. Recreates the terminal on tab activation if user exits the shell.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormBrowse.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormBrowse.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCheckoutBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCheckoutBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCheckoutBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCheckoutRevision.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCheckoutRevision.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCheckoutRevision.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCherryPick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCherryPick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCherryPick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCleanupRepository.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCleanupRepository.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCleanupRepository.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormClone.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormClone.TryExtractUrl(System.String,System.String@)">
            <summary>
            Check whether the given string contains one or more valid git URLs and extracts
            the first URL that exists, if any.
            </summary>
            <remarks>
            PathUtil.CanBeGitURL is used as a standard way to detect a git URL.
            The first URL extracted from <paramref name="contents"/> is assigned to
            <paramref name="url"/>. If <paramref name="contents"/> contains more than one URL,
            subsequent URLs are not extracted.
            </remarks>
            <param name="contents">A string to attempt to extract URLs from.</param>
            <param name="url">A <see cref="T:System.String"/> that contains the URL, if any, extracted from <paramref name="contents"/>.</param>
            <returns><see langword="true"/> if a URL was extracted; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormClone.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormClone.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCommandlineHelp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCommandlineHelp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCommandlineHelp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCommit.LoadUnstagedOutput(System.Collections.Generic.IReadOnlyList{GitCommands.GitItemStatus})">
            <summary>
              Loads the unstaged output.
              This method is passed in to the SetTextCallBack delegate
              to set the Text property of textBox1.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCommit.ReplaceMessage(System.String)">
            <summary>
            replace the Message.Text in an undo-able way
            </summary>
            <param name="message">the new message</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCommit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCommit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.CommitKind">
            <summary>
            Indicates the kind of commit being prepared. Used for adjusting the behavior of FormCommit.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCompareToBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCompareToBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCompareToBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCreateBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCreateBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCreateBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormCreateTag.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCreateTag.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormCreateTag.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormDeleteBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormDeleteRemoteBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteRemoteBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteRemoteBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormDeleteTag.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteTag.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDeleteTag.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormDiff.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDiff.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormDiff.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormFileHistory.#ctor(GitUI.GitUICommands,System.String,GitUIPluginInterfaces.GitRevision,System.Boolean,System.Boolean)">
            <summary>
            Open FileHistory form
            </summary>
            <param name="commands">commands in the current form</param>
            <param name="fileName">name in repo of file to view</param>
            <param name="revision">initial selected commit</param>
            <param name="filterByRevision">add filter</param>
            <param name="showBlame">show blame initially instead of diff view</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormFileHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormFileHistoryController.TryGetExactPath(System.String,System.String@)">
            <summary>
            Gets the exact case used on the file system for an existing file or directory.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="exactPath">The full path using the correct case if the path exists.  Otherwise, null.</param>
            <returns>True if the exact path was found.  False otherwise.</returns>
            <remarks>
            This supports drive-lettered paths and UNC paths, but a UNC root
            will be returned in lowercase (e.g., \\server\share).
            </remarks>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormFormatPatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormFormatPatch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormFormatPatch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormGitAttributes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormGitAttributes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormGitAttributes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormGitIgnore.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormGitIgnore.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormGitIgnore.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormInit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormInit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormInit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormMailMap.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMailMap.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMailMap.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.FormMergeBranch">
            <summary>Form to merge a branch into the current branch.</summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMergeBranch.#ctor(GitUI.GitUICommands,System.String)">
            <summary>Initializes <see cref="T:GitUI.CommandsDialogs.FormMergeBranch"/>.</summary>
            <param name="defaultBranch">Branch to merge into the current branch.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormMergeBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMergeBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMergeBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormMergeSubmodule.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMergeSubmodule.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormMergeSubmodule.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormPull.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormPull.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormPull.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormPush.UserGitRemotes">
            <summary>
            Gets the list of remotes configured in .git/config file.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormPush.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormPush.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormPush.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormRebase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRebase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRebase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormReflog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormReflog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormReflog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormRemotes.PreselectRemoteOnLoad">
            <summary>
            If this is not null before showing the dialog the given
            remote name will be preselected in the listbox
            </summary>
            <remarks>exclusive of <see cref="P:GitUI.CommandsDialogs.FormRemotes.PreselectLocalOnLoad"/></remarks>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormRemotes.PreselectLocalOnLoad">
            <summary>
            If this is not null before showing the dialog tab "Default push behvaior" is opened
            and the given local name will be preselected in the listbox
            </summary>
            <remarks>exclusive of <see cref="P:GitUI.CommandsDialogs.FormRemotes.PreselectRemoteOnLoad"/></remarks>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormRemotes.UserGitRemotes">
            <summary>
            Gets the list of remotes configured in .git/config file.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormRemotes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRemotes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRemotes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormRenameBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRenameBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRenameBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.FormResetChanges">
            <summary>
            Shows a form asking if the user wants to reset their changes.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormResetChanges.ShowResetDialog(System.Windows.Forms.IWin32Window,System.Boolean,System.Boolean)">
            <summary>
            Shows the dialog modally under the given owner, and returns the user's selection (RESET, RESET_AND_DELETE, or CANCEL).
            </summary>
            <param name="owner">Shows this form as a modal dialog with the specified owner.</param>
            <param name="hasExistingFiles">Are there existing (modified) files selected?</param>
            <param name="hasNewFiles">Are there new (untracked) files selected?</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormResetChanges.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormResetChanges.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormResetChanges.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormResolveConflicts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormResolveConflicts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormResolveConflicts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormRevertCommit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRevertCommit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormRevertCommit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel._isSparseCheckoutEnabledAsSaved">
            <summary>
            Remembers what were in settings, to check <see cref="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.IsSparseCheckoutEnabled" /> against to tell if modified.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel._sRulesTextAsOnDisk">
            <summary>
            Remembers what were loaded from disk, to check <see cref="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.RulesText" /> against to tell if modified.
            NULL until loaded.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.IsRefreshWorkingCopyOnSave">
            <summary>
            Whether to run the cmd to refresh WC when closing w/save.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.IsRulesTextChanged">
            <summary>
            Tells whether the rules have been edited in the UI against what's on disk.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.IsSparseCheckoutEnabled">
            <summary>
            Current UI state of the Git sparse option.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.RulesText">
            <summary>
            Current UI state of the sparse WC rules text. NULL if n/a.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.GetCurrentSparseEnabledState">
            <summary>
            Read from settings.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.GetPathToSparseCheckoutFile">
            <summary>
            Path to the file with the sparse WC rules.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.IsWithUnsavedChanges">
            <summary>
            Checks if got anything to save. Can cancel without confirmation if not dirty.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.RefreshWorkingCopy">
            <summary>
            Re-applies the current options/rules to the WC.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.SaveChanges">
            <summary>
            Saves changes (if modified), and refresh WC.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.SetRulesTextAsOnDisk(System.String)">
            <summary>
            As view loads the text in its impl of the editor, tells the exact on-disk text when it gets known.
            </summary>
        </member>
        <member name="E:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.ComfirmAdjustingRulesOnDeactRequested">
            <summary>
            Fires for the view to show a confirmation msgbox on the matter.
            </summary>
        </member>
        <member name="E:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.PropertyChanged">
            <summary>
            Fires on any prop change. Lightweight reactive.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.SaveChangesTurningOffSparseSpecialCase">
            <summary>
            Make sure WC gets unsparsed when turning off sparse.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.ComfirmAdjustingRulesOnDeactEventArgs">
            <summary>
            For <see cref="E:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.ComfirmAdjustingRulesOnDeactRequested" />.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormSparseWorkingCopyViewModel.ComfirmAdjustingRulesOnDeactEventArgs.IsCurrentRuleSetEmpty">
            <summary>
            Empty rule set vs. got some stuff there
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormStash.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormStash.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormStash.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormSubmodules.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSubmodules.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormSubmodules.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormVerify.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormVerify.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormVerify.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormVerify.LostObject.LogCommandArgumentsFormat">
            <summary>
            {0} - lost object's hash.
            %aN - committer name.
            %s  - subject.
            %ct - committer date, UNIX timestamp (easy to parse format).
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormVerify.LostObject.ObjectId">
            <summary>
            Id (SHA-1 hash) of the lost object.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormVerify.LostObject.Parent">
            <summary>
            Id (SHA-1 hash) of parent commit to the lost object.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormVerify.LostObject.RawType">
            <summary>
            Diagnostics and object type.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.FormVerify.LostObject.TagName">
            <summary>
            Tag name (for a tag object)
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormVerify.SortableLostObjectsList.LostObjectsComparer.Create(System.ComponentModel.PropertyDescriptor,System.Boolean)">
            <summary>
            Creates a comparer to sort lostObjects by specified property.
            </summary>
            <param name="propertyDescriptor">Property to sort by.</param>
            <param name="isReversedComparing">Use reversed sorting order.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormVerify.SortableLostObjectsList.LostObjectsComparer.AddSortableProperty``1(System.Linq.Expressions.Expression{System.Func{GitUI.CommandsDialogs.FormVerify.LostObject,``0}},System.Comparison{GitUI.CommandsDialogs.FormVerify.LostObject})">
            <summary>
            Adds custom property comparer.
            </summary>
            <typeparam name="T">Property type.</typeparam>
            <param name="expr">Property to sort by.</param>
            <param name="propertyComparer">Property values comparer.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.FormViewPatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormViewPatch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.FormViewPatch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.FullBleedTabControl">
            <summary>
            Subclass of <see cref="T:System.Windows.Forms.TabControl"/> whose tab items have no gaps with the border.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.IInvalidRepositoryRemover.ShowDeleteInvalidRepositoryDialog(System.String)">
            <summary>
            Shows a dialog to remove the provided invalid repository, or all invalid repositories.
            </summary>
            <param name="repositoryPath">An invalid repository.</param>
            <returns><see langword="true"/> if any repositories were removed; otherwise <see langword="false"/>.</returns>
            <remarks>The method does not verify that the provided <paramref name="repositoryPath"/> is invalid.</remarks>
        </member>
        <member name="M:GitUI.CommandsDialogs.InvalidRepositoryRemover.ShowDeleteInvalidRepositoryDialog(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.CommandsDialogs.RememberFileContextMenuController.RememberedDiffFileItem">
            <summary>
            The remembered file status item, to diff with other files and commits
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RememberFileContextMenuController.CreateFileStatusItem(System.String,GitUIPluginInterfaces.GitRevision)">
            <summary>
            Get a FileStatusItem that can be used to compare with
            </summary>
            <param name="name">The file name</param>
            <param name="rev">The Git revision</param>
            <returns>The FileStatusItem</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RememberFileContextMenuController.ShouldEnableFirstItemDiff(GitUI.UserControls.FileStatusItem,System.Boolean)">
            <summary>
            Check if this file and commit can be used as the first item in a diff to another item
            It must be possible to describe the item as a Git commitish
            </summary>
            <param name="item">The file status item</param>
            <param name="isSecondRevision">true if second revision can be used as the first item</param>
            <returns>If the item can be used</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RememberFileContextMenuController.ShouldEnableSecondItemDiff(GitUI.UserControls.FileStatusItem,System.Boolean)">
            <summary>
            Check if this file and commit can be used as the second item in a diff to another item
            </summary>
            <param name="item">The file status item</param>
            <param name="isSecondRevision">true if second revision can be used as the second item</param>
            <returns>If the item can be used</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RememberFileContextMenuController.GetGitCommit(System.Func{System.String,GitUIPluginInterfaces.ObjectId,GitUIPluginInterfaces.ObjectId},GitUI.UserControls.FileStatusItem,System.Boolean)">
            <summary>
            A Git commitish representation of an object
            https://git-scm.com/docs/gitrevisions#_specifying_revisions
            </summary>
            <param name="getFileBlobHash">the Git module function to get the blob</param>
            <param name="item">the item</param>
            <param name="isSecondRevision">true if second revision is used</param>
            <returns>A Git commitish</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.CreatePullRequestForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.RepoHosting.CreatePullRequestForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.CreatePullRequestForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.RepoHosting.ForkAndCloneForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.ForkAndCloneForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.ForkAndCloneForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.ViewPullRequestsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.RepoHosting.ViewPullRequestsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RepoHosting.ViewPullRequestsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.DescribeRevision(System.Collections.Generic.List{GitUIPluginInterfaces.GitRevision})">
            <summary>
            Provide a description for the first selected or parent to the "primary" selected last
            </summary>
            <returns>A description of the selected parent</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.CanResetToRevision(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Checks if it is possible to reset to the revision.
            For artificial is Index is possible but not WorkTree or Combined
            </summary>
            <param name="guid">The Git objectId</param>
            <returns>If it is possible to reset to the revisions</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.StageSelectedFiles">
            <summary>
            Hotkey handler
            </summary>
            <returns>true if hotkey handled</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.UnstageSelectedFiles">
            <summary>
            Hotkey handler
            </summary>
            <returns>true if hotkey handled</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.ResetSelectedFilesWithConfirmation">
            <summary>
            Hotkey handler
            </summary>
            <returns>true if hotkey handled</returns>
        </member>
        <member name="F:GitUI.CommandsDialogs.RevisionDiffControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionDiffControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.RevisionFileTreeControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionFileTreeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionFileTreeControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.IRevisionFileTreeController.Find(System.Windows.Forms.TreeNodeCollection,System.String)">
            <summary>
            Locates the node by the label.
            </summary>
            <returns>The first node matching the label, if one found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.IRevisionFileTreeController.LoadChildren(GitUIPluginInterfaces.IGitItem,System.Windows.Forms.TreeNodeCollection,System.Windows.Forms.ImageList.ImageCollection)">
            <summary>
            Loads children items for the provided item in to the specified nodes.
            For file type items it also loads icons associated with these types at the OS level.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.IRevisionFileTreeController.SelectFileOrFolder(GitUI.UserControls.NativeTreeView,System.String)">
            <summary>
            Select the file or directory node corresponding to the sub path provided.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.IRevisionFileTreeController.ResetCache">
            <summary>
            Clears the cache of the current revision's loaded children items.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionFileTreeController.Find(System.Windows.Forms.TreeNodeCollection,System.String)">
            <summary>
            Locates the node by the label.
            </summary>
            <returns>The first node matching the label, if one found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionFileTreeController.LoadChildren(GitUIPluginInterfaces.IGitItem,System.Windows.Forms.TreeNodeCollection,System.Windows.Forms.ImageList.ImageCollection)">
            <summary>
            Loads children items for the provided item in to the specified nodes.
            Loaded children are cached until <see cref="M:GitUI.CommandsDialogs.RevisionFileTreeController.ResetCache"/> method is called.
            For file type items it also loads icons associated with these types at the OS level.
            </summary>
            <remarks>The method DOES NOT check any input parameters for performance reasons.</remarks>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionFileTreeController.ResetCache">
            <summary>
            Clears the cache of the current revision's loaded children items.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.RevisionGpgInfoControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionGpgInfoControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.RevisionGpgInfoControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SearchControl`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SearchControl`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SearchControl`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SearchWindow`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SearchWindow`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SearchWindow`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.AutoLayoutSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.AutoLayoutSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.AutoLayoutSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.AdvancedSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AdvancedSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AdvancedSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceFontsSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceFontsSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceFontsSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.AppearanceSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.SshSettingsPage">
            <summary>
            TODO: remove this direct dependency to another SettingsPage later when possible
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.CheckGitCredentialWinStore">
            <summary>
            The Git Credential Manager for Windows (GCM) provides secure Git credential storage for Windows.
            It's the successor to the Windows Credential Store for Git (git-credential-winstore), which is no longer maintained.
            Check whether the user has an outdated setting pointing to git-credential-winstore and, if so,
            notify the user and point to our GitHub thread with more information.
            </summary>
            <seealso href="https://github.com/gitextensions/gitextensions/issues/3511#issuecomment-313633897"/>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.RenderSettingSetUnset(System.Func{System.Boolean},System.Windows.Forms.Button,System.Windows.Forms.Button,System.String,System.String)">
            <summary>
            Renders settings as configured or not depending on the supplied condition.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.RenderSettingSet(System.Windows.Forms.Button,System.Windows.Forms.Button,System.String)">
            <summary>
            Renders settings as correctly configured.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.RenderSettingUnset(System.Windows.Forms.Button,System.Windows.Forms.Button,System.String)">
            <summary>
            Renders settings as misconfigured.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ChecklistSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ColorsSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ColorsSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ColorsSettingsPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.CommitDialogSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.CommitDialogSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.CommitDialogSettingsPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ConfirmationsSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ConfirmationsSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ConfirmationsSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ConsoleStyleSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ConsoleStyleSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ConsoleStyleSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.SettingsDialog.Pages.ControlHotkeys">
            <summary>
            ControlHotkeys enables editing of HotkeySettings
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ControlHotkeys.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ControlHotkeys.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ControlHotkeys.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.DetailedSettingsPage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.DetailedSettingsPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.DetailedSettingsPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.DiffViewerSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.DiffViewerSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.DiffViewerSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.FormBrowseRepoSettingsPage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormBrowseRepoSettingsPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormBrowseRepoSettingsPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.FormChooseTranslation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormChooseTranslation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormChooseTranslation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.FormFixHome.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormFixHome.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.FormFixHome.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.GeneralSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GeneralSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GeneralSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigAdvancedSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigAdvancedSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigAdvancedSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigSettingsPage.PageToSettings">
            <summary>
            silently does not save some settings if Git is not configured correctly
            (user notification is done elsewhere)
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitConfigSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.GitRootIntroductionPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitRootIntroductionPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitRootIntroductionPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.GitSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.GitSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.HotkeysSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.HotkeysSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.HotkeysSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.RevisionLinksSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.RevisionLinksSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.RevisionLinksSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ScriptsSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ScriptsSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ScriptsSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.ShellExtensionSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ShellExtensionSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.ShellExtensionSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.SshSettingsPage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.SshSettingsPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.SshSettingsPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.SettingsDialog.Pages.TextboxHotkey.KeyData">
            <summary>Gets or sets the KeyData</summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Pages.PluginRootIntroductionPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.PluginRootIntroductionPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Pages.PluginRootIntroductionPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.FormAvailableEncodings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.FormAvailableEncodings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.FormAvailableEncodings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.SettingsDialog.GroupSettingsPage">
            <summary>
            Page to group other pages
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.SettingsDialog.ISettingsPage.IsInstantSavePage">
            <summary>
            true if the page cannot properly react to cancel or discard
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.ISettingsPageHost.SaveAll">
            <summary>
            needed by ChecklistSettingsPage (TODO: needed here?)
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.ISettingsPageHost.LoadAll">
            <summary>
            needed by ChecklistSettingsPage (TODO: needed here?)
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.Plugins.PluginSettingsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Plugins.PluginSettingsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.Plugins.PluginSettingsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase">
            <summary>
            set Text property in derived classes to set the title
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase.OnPageShown">
            <summary>
            Called when SettingsPage is shown (again);
            e. g. after user clicked a tree item
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase.IsLoadingSettings">
            <summary>
            True during execution of LoadSettings(). Usually derived classes
            apply settings to GUI controls. Some of controls trigger events -
            IsLoadingSettings can be used for example to not execute the event action.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase.IsSettingsLoaded">
            <summary>
            Indicates that settings have been loaded to the page.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase.GetSearchKeywords">
            <summary>
            override to provide search keywords
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsPageBase.GetChildrenText(System.Windows.Forms.Control)">
            <summary>
            Gets the <see cref="P:System.Windows.Forms.Control.Text"/> values of <paramref name="control"/>
            and all its descendants.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.SettingsPageHeader.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsPageHeader.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsPageHeader.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.SettingsDialog.SettingsPageReference">
             <summary>
             to jump to a specific page
            
             TODO: extend with attributes to jump to specific control on settingspage
             </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.SettingsDialog.SettingsPageReferenceByType">
            <summary>
            Type may be a SettingsPage type or a IGitPlugin subclass type
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsTreeViewUserControl.AddSettingsPage(GitUI.CommandsDialogs.SettingsDialog.ISettingsPage,GitUI.CommandsDialogs.SettingsDialog.SettingsPageReference,System.Drawing.Image,System.Boolean)">
            <summary>Add page to settings tree</summary>
            <param name="page">The settings page to add</param>
            <param name="parentPageReference">An already added settings page to be a parent in the tree</param>
            <param name="icon">An icon to display in tree node</param>
            <param name="asRoot">only one page can be set as the root page (for the GitExt and Plugin root node)</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsTreeViewUserControl.HighlightNode(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>Highlights a <see cref="T:System.Windows.Forms.TreeNode"/> or returns it to the default colors.</summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.SettingsTreeViewUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsTreeViewUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SettingsTreeViewUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.SettingsDialog.SimpleHelpDisplayDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SimpleHelpDisplayDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SettingsDialog.SimpleHelpDisplayDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SubmodulesDialog.FormAddSubmodule.LoadRemoteRepoBranches(GitUIPluginInterfaces.IExecutable,System.String)">
            <summary>
            Returns the branches of a remote repository as strings; ignores git errors and warnings.
            </summary>
            'git ls-remotes --heads "URL"' is completely independent from a local repo clone.
            Hence there is no need for a GitModule.
            <param name="gitExecutable">the git executable</param>
            <param name="url">the repo URL; can also be a local path</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.SubmodulesDialog.FormAddSubmodule.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.SubmodulesDialog.FormAddSubmodule.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.SubmodulesDialog.FormAddSubmodule.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.UserScriptContextMenuExtensions.AddUserScripts(System.Windows.Forms.ContextMenuStrip,System.Windows.Forms.ToolStripMenuItem,System.Action{System.String})">
            <summary>
             Adds user scripts to the <paramref name="contextMenu"/>, or under <paramref name="hostMenuItem"/>,
             if scripts are marked as <see cref="P:GitUI.Script.ScriptInfo.AddToRevisionGridContextMenu"/>.
            </summary>
            <param name="contextMenu">The context menu to add user scripts too.</param>
            <param name="hostMenuItem">The menu item to which to add user scripts marked as <see cref="P:GitUI.Script.ScriptInfo.AddToRevisionGridContextMenu"/>.</param>
            <param name="scriptInvoker">The handler that handles user script invocation.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.UserScriptContextMenuExtensions.RemoveUserScripts(System.Windows.Forms.ContextMenuStrip,System.Windows.Forms.ToolStripMenuItem)">
            <summary>
             Removes user scripts from the <paramref name="contextMenu"/>, or under <paramref name="hostMenuItem"/>,
             if scripts are marked as <see cref="P:GitUI.Script.ScriptInfo.AddToRevisionGridContextMenu"/>.
            </summary>
            <param name="contextMenu">The context menu to add user scripts too.</param>
            <param name="hostMenuItem">The menu item to which to add user scripts marked as <see cref="P:GitUI.Script.ScriptInfo.AddToRevisionGridContextMenu"/>.</param>
        </member>
        <member name="F:GitUI.CommandsDialogs.WorktreeDialog.FormCreateWorktree.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.WorktreeDialog.FormCreateWorktree.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.CommandsDialogs.WorktreeDialog.FormManageWorktree.PreselectRemoteOnLoad">
            <summary>
            If this is not null before showing the dialog the given
            remote name will be preselected in the listbox
            </summary>
        </member>
        <member name="T:GitUI.CommandsDialogs.WorktreeDialog.FormManageWorktree.WorkTree">
             <summary>
             Here are the 3 types of lines return by the `worktree list --porcelain` that should be handled:
            
             1:
             worktree /path/to/bare-source
             bare
            
             2:
             /worktree /path/to/linked-worktree
             /HEAD abcd1234abcd1234abcd1234abcd1234abcd1234
             /branch refs/heads/master
            
             3:
             worktree /path/to/other-linked-worktree
             HEAD 1234abc1234abc1234abc1234abc1234abc1234a
             detached
             </summary>
        </member>
        <member name="F:GitUI.CommandsDialogs.WorktreeDialog.FormManageWorktree.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommandsDialogs.WorktreeDialog.FormManageWorktree.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommandsDialogs.WorktreeDialog.FormManageWorktree.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.CommitInfo.CommitInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.CommitInfo.CommitInfo.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommitInfo.CommitInfo.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommitInfo.CommitInfoHeader.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.CommitInfo.CommitInfoHeader.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.CommitInfo.CommitInfoHeader.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.CommitInfo.RefsFormatter.MaximumDisplayedLinesIfLimited">
            <summary>
            The number of displayed lines if the list is limited.
            </summary>
        </member>
        <member name="F:GitUI.CommitInfo.RefsFormatter.MaximumDisplayedRefsIfLimited">
             <summary>
             The number of displayed refs if the list is limited.
            
             If limited, the line "[Show all]" and an empty line are added.
             Hence the list needs to be limited only if it exceeds MaximumDisplayedRefsIfLimited + 2.
             </summary>
        </member>
        <member name="F:GitUI.CustomDiffMergeToolProvider.FormBrowseToolDelay">
            <summary>
            Time to wait before loading custom diff tools in FormBrowse
            Avoid loading while git-log and git-diff run
            </summary>
        </member>
        <member name="M:GitUI.CustomDiffMergeToolProvider.Clear">
            <summary>
            Clear the existing caches
            </summary>
        </member>
        <member name="M:GitUI.CustomDiffMergeToolProvider.LoadCustomDiffMergeTools(GitCommands.GitModule,System.Collections.Generic.IList{GitCommands.CustomDiffMergeTool},System.ComponentModel.IContainer,System.Boolean,System.Int32)">
            <summary>
            Load the available  DiffMerge tools and apply to the menus
            </summary>
            <param name="module">The Git module</param>
            <param name="menus">The menus to update</param>
            <param name="components">The calling Form components, to dispose correctly</param>
            <param name="isDiff">True if diff, false if merge</param>
            <param name="delay">The delay before starting the operation</param>
        </member>
        <member name="T:GitUI.Editor.BlameAuthorMargin">
            <summary>
            This class display avatars in the gutter in a blame control.
            </summary>
        </member>
        <member name="P:GitUI.Editor.Diff.DiffLinesInfo.MaxLineNumber">
            <summary>
            Gets the maximum line number from either left or right version.
            </summary>
        </member>
        <member name="P:GitUI.Editor.Diff.DiffViewerLineNumberControl.MaxLineNumber">
            <summary>
            Gets the maximum line number from either left or right version.
            </summary>
        </member>
        <member name="M:GitUI.Editor.Diff.DiffViewerLineNumberControl.GetLineInfo(System.Int32)">
            <summary>
            returns the according line numbers or null if the caretLine is not mapped
            </summary>
            <param name="caretLine">0-based (in contrast to the displayed line numbers which are 1-based)</param>
        </member>
        <member name="E:GitUI.Editor.FileViewer.EscapePressed">
            <summary>
            Raised when the Escape key is pressed (and only when no selection exists, as the default behaviour of escape is to clear the selection).
            </summary>
        </member>
        <member name="T:GitUI.Editor.FileViewer.ViewMode">
            <summary>
            The type of information currently shown in the file viewer
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ViewPatchAsync(GitUI.UserControls.FileStatusItem,System.String,System.Action)">
            <summary>
            Present the text as a patch in the file viewer
            </summary>
            <param name="item">The gitItem to present</param>
            <param name="text">The patch text</param>
            <param name="openWithDifftool">The action to open the difftool</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ViewFixedPatch(System.String,System.String,System.Action)">
            <summary>
            Present the text as a patch in the file viewer, for GitHub
            </summary>
            <param name="fileName">The fileName to present</param>
            <param name="text">The patch text</param>
            <param name="openWithDifftool">The action to open the difftool</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ViewGitItemAsync(GitCommands.GitItemStatus,GitUIPluginInterfaces.ObjectId,GitUI.UserControls.FileStatusItem,System.Action)">
            <summary>
            View the git item with the TreeGuid.
            </summary>
            <param name="file">GitItem file, with TreeGuid.</param>
            <param name="objectId">Revision to present. Can be null if file.TreeGuid is set.</param>
            <param name="item">Metadata for line patching and presentation.</param>
            <param name="openWithDifftool">difftool command</param>
            <returns>Task to view the item</returns>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ViewFileAsync(System.String,System.Boolean,GitUI.UserControls.FileStatusItem,System.Action)">
            <summary>
            Get contents in the file system async if not too big, otherwise ask user
            </summary>
            <param name="fileName">The file/submodule path</param>
            <param name="isSubmodule">If submodule</param>
            <param name="openWithDifftool">Diff action</param>
            <returns>Task</returns>
        </member>
        <member name="P:GitUI.Editor.FileViewer.SupportLinePatching">
            <summary>
            If the file viewer contents support line patches
            </summary>
        </member>
        <member name="P:GitUI.Editor.FileViewer.LinePatchingBlocksUntilReload">
            <summary>
            Configuration to require that the form using the viewer reloads contents before allowing next line patch
            by clearing <see cref="P:GitUI.Editor.FileViewer.AllowLinePatching" />
            Used for index/worktree where line patches modifies the diff
            </summary>
        </member>
        <member name="P:GitUI.Editor.FileViewer.AllowLinePatching">
            <summary>
            Current state for line patching allowed for worktree/index
            Cleared when the file is reloaded
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ResetView(GitUI.Editor.FileViewer.ViewMode,System.String,GitUI.UserControls.FileStatusItem,System.String)">
            <summary>
            Reset internal status for the new file.
            </summary>
            <param name="viewMode">Requested mode to view.</param>
            <param name="fileName">Filename to present, for highlighting etc.</param>
            <param name="item">Metadata for linepatching.</param>
            <param name="text">Metadata for linepatching.</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.StageSelectedLines">
            <summary>
            Use implementation matching the current viewItem
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.StageSelectedLines(System.Boolean)">
            <summary>
            Stage lines in WorkTree or Unstage lines in Index
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ResetNoncommittedSelectedLines">
            <summary>
            Reset lines in Index or Worktree
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.ApplySelectedLines(System.Boolean,System.Boolean)">
            <summary>
            Cherry-pick/revert patches (not worktree or index)
            </summary>
            <param name="reverse"><see langword="true"/> if patches is to be reversed; otherwise <see langword="false"/></param>.
        </member>
        <member name="M:GitUI.Editor.FileViewer.CopyToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Copy selected text, excluding diff added/deleted information
            </summary>
            <param name="sender">sender object</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.CopyPatchToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Copy selected text as a patch
            </summary>
            <param name="sender">sender object</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GitUI.Editor.FileViewer.NextChangeButtonClick(System.Object,System.EventArgs)">
            <summary>
            Go to next change
            For normal diffs, this is the next diff
            For range-diff, it is the next commit summary header
            </summary>
            <param name="sender">sender object</param>
            <param name="e">event args</param>
        </member>
        <member name="F:GitUI.Editor.FileViewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:GitUI.Editor.FileViewerInternal.EscapePressed">
            <summary>
            Raised when the Escape key is pressed (and only when no selection exists, as the default behaviour of escape is to clear the selection).
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewerInternal.GetTextMarkersMatchingWord(System.String)">
            <summary>
            Create a list of TextMarker instances in the Document that match the given text
            </summary>
            <param name="word">The text to match.</param>
        </member>
        <member name="M:GitUI.Editor.FileViewerInternal.GoToNextOccurrence">
            <summary>
            Move the file viewer cursor position to the next TextMarker found in the document that matches the AppColor.HighlightAllOccurences/>
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewerInternal.GoToPreviousOccurrence">
            <summary>
            Move the file viewer cursor position to the previous TextMarker found in the document that matches the AppColor.HighlightAllOccurences/>
            </summary>
        </member>
        <member name="F:GitUI.Editor.FileViewerInternal.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Editor.FileViewerInternal.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.Editor.FileViewerInternal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.Editor.IFileViewer.GoToLine(System.Int32)">
            <summary>
            positions to the given line number
            </summary>
            <param name="lineNumber">1..MaxLineNumber</param>
        </member>
        <member name="M:GitUI.Editor.IFileViewer.GoToNextOccurrence">
            <summary>
            Move the file viewer caret position to the next TextMarker found in the document that matches the AppColor.HighlightAllOccurences/>
            </summary>
        </member>
        <member name="M:GitUI.Editor.IFileViewer.GoToPreviousOccurrence">
            <summary>
            Move the file viewer caret position to the previous TextMarker found in the document that matches the AppColor.HighlightAllOccurences/>
            </summary>
        </member>
        <member name="M:GitUI.Editor.RichTextBoxExtension.RichTextBoxXhtmlSupportExtension.BeginUpdate(System.Runtime.InteropServices.HandleRef)">
            <summary>
            Maintains performance while updating.
            </summary>
            <remarks>
            <para>
            It is recommended to call this method before doing
            any major updates that you do not wish the user to
            see. Remember to call EndUpdate when you are finished
            with the update. Nested calls are supported.
            </para>
            <para>
            Calling this method will prevent redrawing. It will
            also setup the event mask of the underlying richedit
            control so that no events are sent.
            </para>
            </remarks>
        </member>
        <member name="M:GitUI.Editor.RichTextBoxExtension.RichTextBoxXhtmlSupportExtension.EndUpdate(System.Runtime.InteropServices.HandleRef,System.IntPtr)">
            <summary>
            Resumes drawing and event handling.
            </summary>
            <remarks>
            This method should be called every time a call is made
            made to BeginUpdate. It resets the event mask to it's
            original value and enables redrawing of the control.
            </remarks>
        </member>
        <member name="M:GitUI.Editor.RichTextBoxExtension.RichTextBoxXhtmlSupportExtension.EscapeNonXMLChars(System.String)">
            <summary>
            Returns input text with characters disallowed by XML spec (e.g. most control codes in 0x00-0x20 range)
            replaced with equivalent character references or question marks if there is an unrecoverable error.
            Although they are disallowed even when escaped, this step seems necessary to make them acceptable
            by XmlReader with CheckCharacters disabled.
            </summary>
        </member>
        <member name="M:GitUI.FindAndReplaceForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.FindAndReplaceForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.FindAndReplaceForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.TextEditorSearcher">
            <summary>This class finds occurrences of a search string in a text
            editor's IDocument... it's like Find box without a GUI.</summary>
        </member>
        <member name="P:GitUI.TextEditorSearcher.BeginOffset">
            <summary>Begins the start offset for searching</summary>
        </member>
        <member name="P:GitUI.TextEditorSearcher.EndOffset">
            <summary>Begins the end offset for searching</summary>
        </member>
        <member name="M:GitUI.TextEditorSearcher.SetScanRegion(ICSharpCode.TextEditor.Document.ISelection)">
            <summary>Sets the region to search. The region is updated
            automatically as the document changes.</summary>
        </member>
        <member name="M:GitUI.TextEditorSearcher.SetScanRegion(System.Int32,System.Int32)">
            <summary>Sets the region to search. The region is updated
            automatically as the document changes.</summary>
        </member>
        <member name="M:GitUI.TextEditorSearcher.FindNext(System.Int32,System.Boolean,System.Boolean@)">
            <summary>Finds next instance of LookFor, according to the search rules
            (MatchCase, MatchWholeWordOnly).</summary>
            <param name="beginAtOffset">Offset in Document at which to begin the search</param>
            <remarks>If there is a match at beginAtOffset precisely, it will be returned.</remarks>
            <returns>Region of document that matches the search string</returns>
        </member>
        <member name="T:GitUI.HighlightGroup">
            <summary>Bundles a group of markers together so that they can be cleared
            together.</summary>
        </member>
        <member name="M:GitUI.IFindFilePredicateProvider.Get(System.String,System.String)">
            <summary>
            Returns the names of files that match the specified search pattern
            </summary>
            <param name="searchPattern">The search string to match against the pathes of files</param>
        </member>
        <member name="T:GitUI.FormPuttyError">
            <summary>
            A form that explains that the command needed authentication, and offers to load a private key.
            </summary>
        </member>
        <member name="M:GitUI.FormPuttyError.AskForKey(System.Windows.Forms.IWin32Window,System.String@)">
            <summary>Shows the "SSH error" dialog modally, and returns the path to the key, if one was loaded.</summary>
        </member>
        <member name="F:GitUI.FormPuttyError.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.FormPuttyError.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.FormPuttyError.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.GitExtensionsDialog">
            <summary>Base class for a Git Extensions <see cref="T:System.Windows.Forms.Form"/>.</summary>
            <remarks>Includes support for font, hotkey, icon, translation, and position restore.</remarks>
        </member>
        <member name="M:GitUI.GitExtensionsDialog.#ctor">
            <summary>Creates a new <see cref="T:GitUI.GitExtensionsForm"/> without position restore.</summary>
        </member>
        <member name="M:GitUI.GitExtensionsDialog.#ctor(GitUI.GitUICommands,System.Boolean)">
            <summary>Creates a new <see cref="T:GitUI.GitExtensionsForm"/> indicating position restore.</summary>
            <param name="enablePositionRestore">Indicates whether the <see cref="T:System.Windows.Forms.Form"/>'s position
            will be restored upon being re-opened.</param>
        </member>
        <member name="P:GitUI.GitExtensionsDialog.ManualSectionAnchorName">
            <summary>
            Gets or sets the anchor pointing to a section in the manual pertaining to this dialog.
            </summary>
            <remarks>
            The URL structure:
            https://git-extensions-documentation.readthedocs.io/{ManualSectionSubfolder}.html#{ManualSectionAnchorName}.
            </remarks>
        </member>
        <member name="P:GitUI.GitExtensionsDialog.ManualSectionSubfolder">
            <summary>
            Gets or sets the name of a document pertaining to this dialog.
            </summary>
            <remarks>
            The URL structure:
            https://git-extensions-documentation.readthedocs.io/{ManualSectionSubfolder}.html#{ManualSectionAnchorName}.
            </remarks>
        </member>
        <member name="F:GitUI.GitExtensionsDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.GitExtensionsDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.GitExtensionsDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.GitExtensionsForm">
            <summary>Base class for a Git Extensions <see cref="T:System.Windows.Forms.Form"/>.</summary>
            <remarks>Includes support for font, hotkey, icon, translation, and position restore.</remarks>
        </member>
        <member name="M:GitUI.GitExtensionsForm.#ctor">
            <summary>Creates a new <see cref="T:GitUI.GitExtensionsForm"/> without position restore.</summary>
        </member>
        <member name="M:GitUI.GitExtensionsForm.#ctor(System.Boolean)">
            <summary>Creates a new <see cref="T:GitUI.GitExtensionsForm"/> indicating position restore.</summary>
            <param name="enablePositionRestore">Indicates whether the <see cref="T:System.Windows.Forms.Form"/>'s position
            will be restored upon being re-opened.</param>
        </member>
        <member name="M:GitUI.GitExtensionsForm.OnRuntimeLoad(System.EventArgs)">
            <summary>Invoked at runtime during the <see cref="M:GitUI.GitExtensionsForm.OnLoad(System.EventArgs)"/> method.</summary>
            <remarks>In particular, this method is not invoked when running in a designer.</remarks>
        </member>
        <member name="M:GitUI.GitExtensionsForm.RestorePosition">
            <summary>
              Restores the position of a form from the user settings. Does
              nothing if there is no entry for the form in the settings, or the
              setting would be invisible on the current display configuration.
            </summary>
        </member>
        <member name="T:GitUI.GitModuleControl">
            <summary>
            Base class for a <see cref="T:System.Windows.Forms.UserControl"/> requiring <see cref="T:GitCommands.GitModule"/> and <see cref="T:GitUI.GitUICommands"/>.
            </summary>
        </member>
        <member name="E:GitUI.GitModuleControl.UICommandsSourceSet">
            <summary>
            Occurs after the <see cref="P:GitUI.GitModuleControl.UICommandsSource"/> is set.
            Will only occur once, as the source cannot change after being set.
            </summary>
        </member>
        <member name="P:GitUI.GitModuleControl.UICommandsSource">
            <summary>
            Gets a <see cref="T:GitUI.IGitUICommandsSource"/> for this control.
            </summary>
            <remarks>
            If the commands source has not yet been initialised, this property's getter attempts
            to find a control-tree ancestor of type <see cref="T:GitUI.IGitUICommandsSource"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Unable to initialise the source as
            no ancestor of type <see cref="T:GitUI.IGitUICommandsSource"/> was found.</exception>
        </member>
        <member name="P:GitUI.GitModuleControl.UICommands">
            <summary>Gets the <see cref="P:GitUI.GitModuleControl.UICommandsSource"/>'s <see cref="T:GitUI.GitUICommands"/> reference.</summary>
        </member>
        <member name="M:GitUI.GitModuleControl.TryGetUICommands(GitUI.GitUICommands@)">
            <summary>
            Gets the UI commands, if they've initialised.
            </summary>
            <remarks>
            <para>This method will not attempt to initialise the commands if they have not
            yet been initialised.</para>
            <para>By contrast, the <see cref="P:GitUI.GitModuleControl.UICommands"/> property attempts to initialise
            the value if not previously initialised.</para>
            </remarks>
        </member>
        <member name="P:GitUI.GitModuleControl.Module">
            <summary>Gets the <see cref="P:GitUI.GitModuleControl.UICommands"/>' <see cref="T:GitCommands.GitModule"/> reference.</summary>
        </member>
        <member name="M:GitUI.GitModuleControl.DisposeUICommandsSource">
            <summary>Occurs when the <see cref="P:GitUI.GitModuleControl.UICommandsSource"/> is disposed.</summary>
        </member>
        <member name="M:GitUI.GitModuleControl.OnUICommandsSourceSet(GitUI.IGitUICommandsSource)">
            <summary>Raises the <see cref="E:GitUI.GitModuleControl.UICommandsSourceSet"/> event.</summary>
        </member>
        <member name="T:GitUI.GitModuleForm">
            <summary>Base <see cref="T:System.Windows.Forms.Form"/> that provides access to <see cref="T:GitCommands.GitModule"/> and <see cref="T:GitUI.GitUICommands"/>.</summary>
        </member>
        <member name="E:GitUI.GitModuleForm.UICommandsChanged">
            <inheritdoc />
        </member>
        <member name="P:GitUI.GitModuleForm.IsUnitTestActive">
            <summary>
            Indicates that the process is run by unit tests runner.
            </summary>
        </member>
        <member name="P:GitUI.GitModuleForm.UICommands">
            <inheritdoc />
        </member>
        <member name="P:GitUI.GitModuleForm.Module">
            <summary>Gets a <see cref="T:GitCommands.GitModule"/> reference.</summary>
        </member>
        <member name="T:GitUI.GitUICommands">
            <summary>Contains methods to invoke GitEx forms, dialogs, etc.</summary>
        </member>
        <member name="E:GitUI.GitUICommands.PostRepositoryChanged">
            <summary>
            listeners for changes being made to repository
            </summary>
        </member>
        <member name="M:GitUI.GitUICommands.DoActionOnRepo(System.Windows.Forms.IWin32Window,System.Func{System.Boolean},System.Boolean,System.Boolean,System.EventHandler{GitUIPluginInterfaces.GitUIEventArgs},System.EventHandler{GitUIPluginInterfaces.GitUIPostActionEventArgs})">
            <param name="requiresValidWorkingDir">If action requires valid working directory</param>
            <param name="owner">Owner window</param>
            <param name="changesRepo">if successfully done action changes repo state</param>
            <param name="preEvent">Event invoked before performing action</param>
            <param name="postEvent">Event invoked after performing action</param>
            <param name="action">Action to do. Return true to indicate that the action was successfully done.</param>
            <returns>true if action was successfully done, false otherwise</returns>
        </member>
        <member name="M:GitUI.GitUICommands.Launch(System.String,System.String)">
            <summary>
            Launches a new GE instance.
            </summary>
            <param name="arguments">The command line arguments.</param>
            <param name="workingDir">The working directory for the new process.</param>
            <returns>The <see cref="T:GitUIPluginInterfaces.IProcess"/> object for controlling the launched instance.</returns>
        </member>
        <member name="M:GitUI.GitUICommands.LaunchBrowse(System.String,GitUIPluginInterfaces.ObjectId,GitUIPluginInterfaces.ObjectId)">
            <summary>
            Launch FormBrowse in a new GE instance.
            </summary>
            <param name="workingDir">The working directory for the new process.</param>
            <param name="selectedId">The optional commit to be selected.</param>
            <param name="firstId">The first commit to be selected, the first commit in a diff.</param>
            <returns>The <see cref="T:GitUIPluginInterfaces.IProcess"/> object for controlling the launched instance.</returns>
        </member>
        <member name="M:GitUI.GitUICommands.StartPullDialogAndPullImmediately(System.Boolean@,System.Windows.Forms.IWin32Window,System.String,System.String,GitCommands.AppSettings.PullAction)">
            <param name="pullCompleted">true if pull completed with no errors</param>
            <returns>if revision grid should be refreshed</returns>
        </member>
        <member name="M:GitUI.GitUICommands.StartMergeBranchDialog(System.Windows.Forms.IWin32Window,System.String)">
            <summary>Start Merge dialog, using the specified branch.</summary>
            <param name="owner">Owner of the dialog.</param>
            <param name="branch">Branch to merge into the current branch.</param>
        </member>
        <member name="M:GitUI.GitUICommands.StartArchiveDialog(System.Windows.Forms.IWin32Window,GitUIPluginInterfaces.GitRevision,GitUIPluginInterfaces.GitRevision,System.String)">
            <summary>
            Open the archive dialog
            </summary>
            <param name="revision">Revision to create an archive from</param>
            <param name="revision2">Revision for differencial archive </param>
            <param name="path">Files path for archive</param>
        </member>
        <member name="M:GitUI.GitUICommands.StartRemotesDialog(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.GitUICommands.StartBrowseDialog(System.Windows.Forms.IWin32Window,System.String,GitUIPluginInterfaces.ObjectId,GitUIPluginInterfaces.ObjectId)">
            <summary>
            Open Browse - main GUI including dashboard
            </summary>
            <param name="owner">curent window owner</param>
            <param name="filter">filter to apply to browse</param>
            <param name="selectedId">Currently (last) selected commit id</param>
            <param name="firstId">First selected commit id (as in a diff)</param>
        </member>
        <member name="M:GitUI.GitUICommands.NormalizeFileName(System.String)">
            <summary>
            Remove working directory from filename and convert to POSIX path.
            This is to prevent filenames that are too long while there is room left when the workingdir was not in the path.
            </summary>
        </member>
        <member name="M:GitUI.GitUICommands.RunFileHistoryCommand(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <returns>false on error</returns>
        </member>
        <member name="M:GitUI.GitUICommands.RunBlameCommand(System.Collections.Generic.IReadOnlyList{System.String})">
            <returns>false on error</returns>
        </member>
        <member name="M:GitUI.GitUIExtensions.ViewChangesAsync(GitUI.Editor.FileViewer,GitUI.UserControls.FileStatusItem,System.String,System.Action)">
            <summary>
            View the changes between the revisions, if possible as a diff
            </summary>
            <param name="fileViewer">Current FileViewer</param>
            <param name="item">The FileStatusItem to present changes for</param>
            <param name="defaultText">default text if no diff is possible</param>
            <param name="openWithDiffTool">The difftool command to open with</param>
            <returns>Task to view</returns>
        </member>
        <member name="F:GitUI.HelperDialogs.FormBuildServerCredentials.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormBuildServerCredentials.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormBuildServerCredentials.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormChooseCommit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormChooseCommit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormChooseCommit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormCommitDiff.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormCommitDiff.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormCommitDiff.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.HelperDialogs.HandleOnExit">
            <param name="isError">if command finished with error</param>
            <param name="form">this form</param>
            <returns>if handled</returns>
        </member>
        <member name="M:GitUI.HelperDialogs.FormProcess.HandleOnExit(System.Boolean@)">
            <param name="isError">if command finished with error</param>
            <returns>if handled</returns>
        </member>
        <member name="M:GitUI.HelperDialogs.FormProcess.AppendOutput(System.String)">
            <summary>
            Appends a line of text (CRLF added automatically) both to the logged output (<see cref="M:GitUI.HelperDialogs.FormStatus.GetOutputString"/>) and to the display console control.
            </summary>
        </member>
        <member name="T:GitUI.HelperDialogs.FormRemoteProcess">
            <summary>
            Form that handles Plink exceptions
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormRemoteProcess.SetUrlTryingToConnect(System.String)">
            <summary>
            When cloning a remote using putty, sometimes an error occurs that the fingerprint is not known.
            This is fixed by trying to connect from the command line, and choose yes when asked for storing
            the fingerprint. Just a dirty fix...
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormRemoteProcess.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormRemoteProcess.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormRemoteProcess.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormResetAnotherBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormResetAnotherBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormResetAnotherBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormResetCurrentBranch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormResetCurrentBranch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormResetCurrentBranch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormSelectMultipleBranches.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormSelectMultipleBranches.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.HelperDialogs.FormSelectMultipleBranches.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormStatus.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:GitUI.HelperDialogs.FormStatus.OutputLog">
            <summary>
            Gets the logged output text. Note that this is a separate string from what you see in the console output control.
            For instance, progress messages might be skipped; other messages might be added manually.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormStatus.AppendMessage(System.String)">
            <summary>
            Adds a message to the console display control ONLY, <see cref="M:GitUI.HelperDialogs.FormStatus.GetOutputString" /> will not list it.
            </summary>
        </member>
        <member name="F:GitUI.HelperDialogs.FormStatus.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.HelperDialogs.FormStatus.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.Hotkey.HotkeySettings">
            <summary>
            Stores all hotkey mappings of one target
            </summary>
        </member>
        <member name="P:GitUI.Hotkey.HotkeySettingsManager.Serializer">
            <summary>Lazy-loaded Serializer for HotkeySettings[]</summary>
        </member>
        <member name="M:GitUI.Hotkey.HotkeySettingsManager.IsUniqueKey(System.Windows.Forms.Keys)">
            <summary>
            Returns whether the hotkey is already assigned.
            </summary>
        </member>
        <member name="M:GitUI.Hotkey.HotkeySettingsManager.SaveSettings(GitUI.Hotkey.HotkeySettings[])">
            <summary>Serializes and saves the supplied settings</summary>
        </member>
        <member name="M:GitUI.Hotkey.KeysExtensions.GetKeyCode(System.Windows.Forms.Keys)">
            <summary>
            Strips the modifier from KeyData
            </summary>
        </member>
        <member name="T:GitUI.IGitUICommandsSource">
            <summary>Provides <see cref="T:GitUI.GitUICommands"/> and a change notification.</summary>
        </member>
        <member name="E:GitUI.IGitUICommandsSource.UICommandsChanged">
            <summary>Raised after <see cref="P:GitUI.IGitUICommandsSource.UICommands"/> changes.</summary>
        </member>
        <member name="P:GitUI.IGitUICommandsSource.UICommands">
            <summary>Gets the <see cref="T:GitUI.GitUICommands"/> value.</summary>
            <exception cref="T:System.InvalidOperationException">Attempting to get a value when none has been set.</exception>
        </member>
        <member name="T:GitUI.Interops.DwmApi.DwmApi">
            <summary>
            Allow to set dark title bar on Win10. From: https://stackoverflow.com/questions/57124243/winforms-dark-title-bar-on-windows-10/62811758#62811758
            </summary>
        </member>
        <member name="M:GitUI.NBugReports.BugReportInvoker.Append(System.Text.StringBuilder,System.Exception)">
            <summary>
            Appends the exception data and gets the root error.
            </summary>
            <param name="text">A StringBuilder to which the exception data is appended.</param>
            <param name="exception">An Exception to describe.</param>
            <returns>The inner-most exception message.</returns>
        </member>
        <member name="T:GitUI.NBugReports.UserExternalOperationException">
            <summary>
            Represents errors that occur during execution of user-configured operation, e.g. a script.
            </summary>
        </member>
        <member name="M:GitUI.NBugReports.UserExternalOperationException.#ctor(System.String,GitCommands.ExternalOperationException)">
            <summary>
            Initializes a new instance of the <see cref="T:GitUI.NBugReports.UserExternalOperationException"/> class with a specified parameters
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="context">The command that led to the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GitUI.OsShellUtil.Open(System.String)">
            <summary>
            Open a file with its associated default application.
            </summary>
            <param name="filePath">Pathname of the file to open.</param>
        </member>
        <member name="M:GitUI.OsShellUtil.OpenAs(System.String)">
            <summary>
            Let the user chose an application to open a file.
            </summary>
            <param name="filePath">Pathname of the file to open.</param>
        </member>
        <member name="M:GitUI.OsShellUtil.OpenUrlInDefaultBrowser(System.String)">
            <summary>
            opens urls even with anchor
            </summary>
        </member>
        <member name="M:GitUI.OsShellUtil.PickFolder(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Prompts the user to select a directory.
            </summary>
            <param name="ownerWindow">The owner window.</param>
            <param name="selectedPath">The initially selected path.</param>
            <returns>The path selected by the user, or null if the user cancels the dialog.</returns>
        </member>
        <member name="M:GitUI.PluginRegistry.Initialize">
            <summary>
            Initialises all available plugins on the background thread.
            </summary>
        </member>
        <member name="T:GitUI.Properties.Images">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.AddToGitIgnore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Advanced">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.AdvancedSettings">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Appearance">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ArchiveRevision">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ArrowDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ArrowUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Author">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Bisect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BisectBad">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BisectGood">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BisectSkip">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BisectStop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BitBucket">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Blame">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Blank">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Book">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Branch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchCheckout">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchCreate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchDelete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchFolder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchLocal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchLocalMerged">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchLocalRoot">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchRemote">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchRemoteMerged">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BranchRemoteRoot">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BrowseFileExplorer">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Bug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BugReport">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.BulletAdd">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Changelog">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CheckForUpdates">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Checkout">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CherryPick">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CleanupRepo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ClearLog">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CloneRepoGit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CloneRepoGitHub">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CloseStatusBar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.cmd">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CollapseAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Colors">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitId">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitSignatureError">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitSignatureOk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitSignatureWarning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitSummary">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CommitTemplates">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CompressGitDatabase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Conflict">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Console">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.CopyToClipboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DashboardBackgroundBlue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DashboardBackgroundGrey">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DashboardFolderError">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DashboardFolderGit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Date">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DeleteFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DeleteIndexLock">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Develop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Diff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DocumentTree">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DollarSign">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.DonateBadge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EditDiff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EditFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EditFilter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EditGitConfig">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EditGitIgnore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ExpandAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EyeClosed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.EyeOpened">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.File">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileHistory">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileNew">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusAdded">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusCopied">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusModified">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusRemoved">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusRenamed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileStatusUnknown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FileTree">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FixupAndSquashMessageMarker">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FolderClosed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FolderOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.FolderSubmodule">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Font">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GeneralSettings">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitCommandLog">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitExtensionsLogo16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitExtensionsLogo256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitExtensionsLogoWide">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitForWindows">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitGui">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitHub">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Gitk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GitLogo16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Globe">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GoToChildCommit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GotoCommit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GotoCurrentRevision">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GotoManual">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.GoToParentCommit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpCommandMerge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpCommandMergeFastForward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpCommandRebase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpPullFetch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpPullMerge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpPullMergeFastForward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.HelpPullRebase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Hotkey">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Information">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Integration">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Key">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.LayoutFooter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.LayoutFooterTab">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.LayoutSidebarLeft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.LayoutSidebarTopLeft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.LayoutSidebarTopRight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Maintenance">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Merge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Message">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.NavigateBackward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.NavigateForward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.NavigateUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.New">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.NumberOfLinesDecrease">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.NumberOfLinesIncrease">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Pageant">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Pageant16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PatchApply">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PatchFormat">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PatchView">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Plugin">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.powershell">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Preview">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Pull">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullFetch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullFetchAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullFetchPrune">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullFetchPruneAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullMerge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullRebase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PullRequest">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Push">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Putty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.PuttyGen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.pwsh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Rebase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RecentRepositories">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RecoverLostObjects">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ReloadRevisions">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ReloadRevisionsDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Remote">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RemoteAdd">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RemoteDelete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RemoteEnableAndFetch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RemoteRepo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Remotes">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Renamed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoCreate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateClean">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateDirtySubmodules">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateMixed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateStaged">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateUnknown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RepoStateUntrackedOnly">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ResetCurrentBranchToHere">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ResetFileTo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ResetWorkingDirChanges">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.RevertCommit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SaveAs">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Select">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SelectBranch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SelectRevision">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Settings">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ShellExtensions">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ShowEntireFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ShowFirstParent">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ShowThisBranchOnly">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ShowWhitespace">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SolveMerge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SortBy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Stage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StageAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StageAllFiltered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Star">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StarDeselected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StarRemove">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Stash">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StatusBadgeError">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StatusBadgeSuccess">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StatusBadgeWaiting">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.StopTrackingFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionDownDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionSemiDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionSemiDownDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionSemiUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionSemiUpDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmoduleRevisionUpDirty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmodulesManage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmodulesSync">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.SubmodulesUpdate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Tag">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagCreate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagDelete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagError">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagHorizontal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagMany">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagOk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TagWarning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Translate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TreeCollapseAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TreeExpandAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.TreeExpandSubtree">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.UiScrollBar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Unstage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.UnstageAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.UnstageAllFiltered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.User80">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.ViewFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.VisualStudioTeamServices">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.Whitespace">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.WhitespaceIgnore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.WhitespaceIgnoreAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.WhitespaceIgnoreEol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.WorkingDirChanges">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Images.WorkTree">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:GitUI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Blame">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.branch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.bug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.ChangeLog">
             <summary>
               Looks up a localized string similar to Changelog
            =========
            
            ### Version 3.2.1 (2 Sep 2019)
            
            #### Features:
            * Fix scrolling for committers label in statistics plugin - PR [7092]
            * Display icons in commit templates menu items - PR [7037]
            * Settings: Display label to the top to make UI more readable on multiline controls - PR [7036]
            * Fix potential bad end of line replacement - PR [7032]
            * Pull form items clipped on HiDPI scaled displays  - Issue [7020]
            * TortoiseGitMerge.exe old default name - PR [7004]
            * Add support for &quot;--rebase-merg [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.CherryPick">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Coders">
             <summary>
               Looks up a localized string similar to Steffen Forkmann, Jacob Stanley, Nick Mayer, Kevin Moore, Davide,
            Dominique Plante, Grzegorz Pachocki, Seth Behunin, bleis-tift, Chris Meaney, Nathanael Schmied, Adrian Codrington,
            Troels Thomsen, Wilbert van Dolleweerd, Tobias Bieniek, Radoslaw Miazio, Stan Angeloff, Matt McCormick,
            Bjørn Moe, William Swanson, Daniel Locantore, Harald Deischinger, Radek Miazio, Stefan Rueckl,
            Emanuel Henrique do Prado, Lukasz Byczynski, Steffen M. Colding-Jørgensen, alexeik, arBmind, mausch, xaro,
            Xharze, Kim Christen [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.CommitId">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.CommitSummary">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.CopyToClipboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.DeleteText">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Designers">
            <summary>
              Looks up a localized string similar to Andréj Telle, Oliver Friedrich.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.FileStatusAdded">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.FileStatusRemoved">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.GitExtensionsLogoIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.information">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Message">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.RecentRepositories">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.RepoOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.SyntaxHighlighting">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Team">
            <summary>
              Looks up a localized string similar to Henk Westhuis, Arkady Shapkin, Janusz Białobrzewski, Igor Velikorossov aka RussKie, Gerhard Olsson, Drew Noakes.
            </summary>
        </member>
        <member name="P:GitUI.Properties.Resources.Translators">
             <summary>
               Looks up a localized string similar to 79 collaborators on Transifex website, Gianni Rosa Gallina, Cheng Huang, Floyd Hung, superlongman, rferriz, gor, xaro, bleis-tift, Ralph Haußmann,
            Jasper Chien, Arkadiy Shapkin, ferow2k, Thibault D&apos;Archivio, australiensun, Airat Salikhov, Dave Brotherstone,
            diegoaossas, hogelog, Philippe Miossec, Michael Benz (Copro), KUNIMI Taiyoh, Victor Shih, bygreencn, mrahn80,
            Alexander Eifler, Marcelo Ghelman, ghanique, olshevskiy87.
             </summary>
        </member>
        <member name="M:GitUI.RevisionDiffInfoProvider.TryGet(System.Collections.Generic.IReadOnlyList{GitUIPluginInterfaces.GitRevision},GitUI.RevisionDiffKind,System.String@,System.String@,System.String@)">
             <summary>
             One row selected:
             B - Selected row
             A - B's parent
            
             Two rows selected:
             A - first selected row
             B - second selected row
             </summary>
        </member>
        <member name="F:GitUI.Script.FormFilePrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Script.FormFilePrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.Script.FormFilePrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.Script.ScriptInfo.Icon">
            <summary>
            Gets or sets the icon name.
            </summary>
        </member>
        <member name="M:GitUI.Script.ScriptInfo.GetIcon">
            <summary>
            Gets the associated bitmap.
            </summary>
            <returns>Bitmap image</returns>
        </member>
        <member name="F:GitUI.Script.ScriptOptionsParser.currentMessage">
            <summary>
            Name of the option which requires the full commit message.
            </summary>
        </member>
        <member name="F:GitUI.Script.ScriptOptionsParser.Options">
            <summary>
            Gets the list of available script options.
            </summary>
        </member>
        <member name="M:GitUI.Script.ScriptOptionsParser.Contains(System.String,System.String)">
            <summary>
             Checks whether <paramref name="arguments"/> contains the supplied <paramref name="option"/>.
            </summary>
            <param name="arguments">The script argument.</param>
            <param name="option">The option.</param>
            <returns><see langword="true"/> if the argument contains the option; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:GitUI.Script.ScriptOptionsParser.DependsOnSelectedRevision(System.String)">
            <summary>
             Checks whether <paramref name="option"/> starts with "s".
            </summary>
            <param name="option">The option.</param>
            <returns><see langword="true"/> if the options starts with "s"; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:GitUI.Script.ScriptRunner">
            <summary>Runs scripts.</summary>
        </member>
        <member name="M:GitUI.Script.ScriptRunner.ExecuteScriptCommand(System.Windows.Forms.IWin32Window,GitCommands.GitModule,System.Int32,GitUIPluginInterfaces.IGitUICommands,GitUI.RevisionGridControl)">
            <summary>Tries to run scripts identified by a <paramref name="command"/></summary>
        </member>
        <member name="F:GitUI.Script.SimplePrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Script.SimplePrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.Script.SimplePrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.ExecutableCommandLine">
            <summary>
            Gets the executable command line.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.ExecutableName">
            <summary>
            Gets the executable name.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.ExecutablePath">
            <summary>
            Gets the executable resolved path.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.HasExecutable">
            <summary>
            Indicates whether the executable for the given shell is located and the shell can be run.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.Icon">
            <summary>
            Gets the shell icon.
            </summary>
        </member>
        <member name="P:GitUI.Shells.IShellDescriptor.Name">
            <summary>
            Gets the user visible shell name.
            </summary>
        </member>
        <member name="M:GitUI.Shells.IShellDescriptor.GetChangeDirCommand(System.String)">
            <summary>
            Gets the command to execute when a working directory is switched.
            </summary>
            <param name="path">The working directory path.</param>
            <returns>The chdir command.</returns>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.ExecutableCommandLine">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.ExecutableName">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.ExecutablePath">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.HasExecutable">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.Icon">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.Shells.ShellDescriptor.Name">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.Shells.ShellDescriptor.GetChangeDirCommand(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:GitUI.SpellChecker.EditNetSpell.EnsureEmptyLine(System.Boolean,System.Int32)">
            <summary>
            Make sure this line is empty by inserting a newline at its start.
            </summary>
        </member>
        <member name="M:GitUI.SpellChecker.EditNetSpell.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.SpellChecker.EditNetSpell.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.SpellChecker.EditNetSpell.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.SpellChecker.TextBoxHelper">
            <summary>
              Wraps API calls for access to missing functionality
              from the System.Windows.Forms text box.
            </summary>
        </member>
        <member name="T:GitUI.Theming.ThemeRenderer">
            <summary>
            Defines customization of win32 api theming methods, see
            https://docs.microsoft.com/en-us/windows/win32/api/uxtheme/ and
            https://docs.microsoft.com/en-us/windows/win32/controls/parts-and-states
            </summary>
        </member>
        <member name="F:GitUI.Theming.ThemeRenderer.Unhandled">
            <summary>
            Result code indicating theming method's task was not achieved.
            In this case original win32 theming api method is applied by <see cref="T:GitUI.Theming.Win32ThemeHooks"/>
            </summary>
        </member>
        <member name="F:GitUI.Theming.ThemeRenderer.Handled">
            <summary>
            Result code indicating successful completion of theming method's task
            </summary>
        </member>
        <member name="M:GitUI.Theming.ThemeRenderer.AddThemeData(System.IntPtr)">
            <summary>
            By using this method we find which theme data handle corresponds to a given CLSID e.g.
            "SCROLLBAR". The result depends on window class, e.g. ListView or NativeListView will
            have different theme data.
            </summary>
            <param name="hwnd">win32 window handle</param>
        </member>
        <member name="P:GitUI.Theming.SystemDialogDetector.IsSystemDialogOpen">
            <summary>
            Determines whether a system dialog such as MessageBox.Show or Debug.Assert is currently
            displayed.
            </summary>
            <remarks>
            Performance measurement result:
            Always faster than 200 microseconds
            90% cases faster than 5 microseconds, probably `GetActiveWindow` caches result
            </remarks>
        </member>
        <member name="M:GitUI.Theming.ThemeMigration.MigrateColorSettings">
            <summary>
            Before <see cref="T:GitUI.Theming.ThemeModule"/>, <see cref="T:GitCommands.AppSettings"/> was responsible for colors.
            This method saves custom colors (if any) from <see cref="T:GitCommands.AppSettings"/> to a user-defined theme named 'migrated'.
            </summary>
        </member>
        <member name="M:GitUI.Theming.ThemePathProvider.GetThemePath(GitExtUtils.GitUI.Theming.ThemeId)">
            <exception cref="T:System.InvalidOperationException">
            Attempt to resolve a custom theme from a %UserAppData% folder in a portable version.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">Theme does not exist.</exception>
        </member>
        <member name="M:GitUI.AvatarControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:GitUI.AvatarControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.AvatarControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:GitUI.Blame.BlameControl.EscapePressed">
            <summary>
            Raised when the Escape key is pressed (and only when no selection exists, as the default behaviour of escape is to clear the selection).
            </summary>
        </member>
        <member name="F:GitUI.Blame.BlameControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Blame.BlameControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.BranchComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.BranchComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.BranchComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.BranchSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.BranchSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.BranchSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:GitUI.UserControls.CommitDiff.EscapePressed">
            <summary>
            Raised when the Escape key is pressed (and only when no selection exists, as the default behaviour of escape is to clear the selection).
            </summary>
        </member>
        <member name="F:GitUI.UserControls.CommitDiff.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.CommitDiff.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.CommitDiff.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:GitUI.UserControls.CommitPickerSmallControl.SelectedObjectIdChanged">
            <summary>
            Occurs whenever the selected commit hash changes.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.CommitPickerSmallControl.SetSelectedCommitHash(System.String)">
            <summary>
            shows a message box if commitHash is invalid
            </summary>
        </member>
        <member name="F:GitUI.UserControls.CommitPickerSmallControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.CommitPickerSmallControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.CommitPickerSmallControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.UserControls.CommitSummaryUserControl">
            <summary>
            TODO: replace with some better looking RTF control (similar to Commit Tab in main window)
                  Tried RichTextBox: strangely it does not show any formatting, just plain text.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.CommitSummaryUserControl.Revision">
            <summary>
            Gets or sets a revision for which to show a summary.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.CommitSummaryUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.CommitSummaryUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.CommitSummaryUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.UserControls.ConsoleEmulatorOutputControl">
            <summary>
            An output control which inserts a fully-functional console emulator window.
            </summary>
        </member>
        <member name="T:GitUI.UserControls.ConsoleOutputControl">
            <summary>
                <para>Base control for executing a console process, as used by the <see cref="T:GitUI.HelperDialogs.FormProcess" />.</para>
                <para>Switches between the basic impl which redirects stdout and integration of a real interactive terminal window into the form, if available.</para>
            </summary>
        </member>
        <member name="P:GitUI.UserControls.ConsoleOutputControl.IsDisplayingFullProcessOutput">
            <summary>
            Whether this output controls accurately renders all of the process output, so there's no need in printing select lines manually, or duping progress in the title.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.ConsoleOutputControl.CreateInstance">
            <summary>
            Creates the instance best fitting the current environment.
            </summary>
        </member>
        <member name="E:GitUI.UserControls.ConsoleOutputControl.ProcessExited">
            <summary>
            Fires when the cmdline process exits.
            </summary>
        </member>
        <member name="E:GitUI.UserControls.ConsoleOutputControl.Terminated">
            <summary>
            Fires when the output control terminates. This only applies to the console emulator control mode (an editbox won't terminate), and fires when the console emulator itself (not the command it were executing) is terminated as a process, and the control goes blank.
            </summary>
        </member>
        <member name="T:GitUI.UserControls.EditboxBasedConsoleOutputControl">
            <summary>
            Uses an edit box and process output streams redirection.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.EditboxBasedConsoleOutputControl.ProcessOutputThrottle.#ctor(System.Action{System.String})">
            <param name="doOutput">Will be called on the UI thread.</param>
        </member>
        <member name="M:GitUI.UserControls.EditboxBasedConsoleOutputControl.ProcessOutputThrottle.Append(System.String)">
            <remarks>Can be called on any thread.</remarks>
        </member>
        <member name="F:GitUI.UserControls.ExListView._minGroupInsertionIndex">
            <summary> Position in <see cref="P:System.Windows.Forms.ListView.Groups"/> collection after the technical "Default" group </summary>
        </member>
        <member name="E:GitUI.UserControls.ExListView.GroupMouseDown">
            <summary>
            Occurs when the user presses mouse button in a <see cref="T:System.Windows.Forms.ListViewGroup"/> within the list view control.
            </summary>
        </member>
        <member name="E:GitUI.UserControls.ExListView.GroupMouseUp">
            <summary>
            Occurs when the user releases mouse button in a <see cref="T:System.Windows.Forms.ListViewGroup"/> within the list view control.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.ExListView.SetGroups(System.Collections.Generic.IReadOnlyList{System.Windows.Forms.ListViewGroup},System.StringComparer)">
            <summary>
            Modifies <see cref="P:System.Windows.Forms.ListView.Groups"/> collection to match supplied one.
            </summary>
            <remarks>
            The order of newly inserted groups is preserved.
            The mutual order of already existing groups is left intact to keep algorithm simpler and non-destructive.
            </remarks>
        </member>
        <member name="M:GitUI.UserControls.ExListView.BeginGroupInsertion">
             <summary>
             Call this method once after <see cref="P:System.Windows.Forms.ListView.Groups"/> collection was cleared (or created)
             before making any calls to <see cref="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)"/>
            
             <see cref="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)"/> calls must
             not be used after calling this method
             </summary>
        </member>
        <member name="P:GitUI.UserControls.FileStatusItem.FirstRevision">
            <summary>
            First (Parent or A in diff)
            Can be null for the initial commit
            </summary>
        </member>
        <member name="P:GitUI.UserControls.FileStatusItem.SecondRevision">
            <summary>
            Selected (current or B in diff)
            The revision selected, the primary for which info exists
            </summary>
        </member>
        <member name="P:GitUI.UserControls.FileStatusItem.BaseA">
            <summary>
            If ranges are selected, the first commit (base) for <see cref="P:GitUI.UserControls.FileStatusItem.FirstRevision"/> (head)
            </summary>
        </member>
        <member name="P:GitUI.UserControls.FileStatusItem.BaseB">
            <summary>
            If ranges are selected, the first commit (base) for <see cref="P:GitUI.UserControls.FileStatusItem.SecondRevision"/> (head)
            </summary>
        </member>
        <member name="P:GitUI.UserControls.FileStatusItem.Item">
            <summary>
            The status item in the list
            </summary>
        </member>
        <member name="P:GitUI.UserControls.FolderBrowserButton.PathShowingControl">
            <summary>
            The Text property of this control will be filled with the selected path
            and the Text property is used as path to initialize the folder browser's default selection
            </summary>
        </member>
        <member name="M:GitUI.UserControls.FolderBrowserButton.ShowFolderBrowserDialogWithPreselectedPath(System.Func{System.String},System.Action{System.String})">
            <summary>
            Opens a a folder picker dialog with the path in "getter" preselected and
            if OK is returned uses "setter" to set the path
            </summary>
        </member>
        <member name="F:GitUI.UserControls.FolderBrowserButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.FolderBrowserButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.FolderBrowserButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.GotoUserManualControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.GotoUserManualControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.GotoUserManualControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.InteractiveGitActionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.InteractiveGitActionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.InteractiveGitActionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.UserControls.ListViewGroupMouseEventArgs">
            <inheritdoc />
        </member>
        <member name="F:GitUI.UserControls.RemotesComboboxControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RemotesComboboxControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.RemotesComboboxControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.AuthorRevisionHighlighting.ProcessRevisionSelectionChange(GitUIPluginInterfaces.IGitModule,System.Collections.Generic.IReadOnlyCollection{GitUIPluginInterfaces.GitRevision})">
            <returns><c>true</c> if the UI should be refreshed in response to this change.</returns>
        </member>
        <member name="T:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider">
            <summary>
            Base class for columns shown in the revisions grid control.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider.Column">
            <summary>The DataGrid column object that models this column.</summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider.Name">
            <summary>The display friendly name of this column.</summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs,GitUIPluginInterfaces.GitRevision,System.Int32,GitUI.UserControls.RevisionGrid.CellStyle@)">
            <summary>Renders the content of a cell in this column.</summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs,GitUIPluginInterfaces.GitRevision)">
            <summary>Formats the textual representation of a cell in this column.</summary>
            <remarks>Implementations may set <c>e.Value</c> to the required string, and then set <c>e.FormattingApplied</c> to <c>true</c>.</remarks>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Columns.ColumnProvider.TryGetToolTip(System.Windows.Forms.DataGridViewCellMouseEventArgs,GitUIPluginInterfaces.GitRevision,System.String@)">
            <summary>Attempts to get custom tool tip text for a cell in this column.</summary>
            <remarks>Returning <c>false</c> here will not stop a tool tip being automatically displayed for truncated text.</remarks>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.GraphCache.Head">
            <summary>
            The 'slot' that is the head of the circular bitmap.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.GraphCache.HeadRow">
            <summary>
            The node row that is in the head slot.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.GraphCache.Count">
            <summary>
            Number of elements in the cache.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Columns.GraphCache.Capacity">
            <summary>
            Number of elements allowed in the cache. Is based on control height.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.EmptyRepoControl.#ctor">
            <summary>For VS designer.</summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.FormQuickGitRefSelector.SelectedRef">
            <summary>
            Gets the ref selected by the user.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.FormQuickItemSelector.SelectedItem">
            <summary>
            Gets the item selected by the user.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.RevisionGrid.FormQuickItemSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.FormQuickItemSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.FormQuickItemSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.FormQuickStringSelector.SelectedString">
            <summary>
            Gets the string selected by the user.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.RevisionGrid.FormRevisionFilter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.FormRevisionFilter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.FormRevisionFilter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.GitRefListsForRevision.GetDeletableRefs(System.String)">
            <summary>
            Returns the collection of branches and tags which can be deleted.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.GitRefListsForRevision.GetRenameableLocalBranches">
            <summary>
            Returns the collection of local branches which can be renamed.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Graph.BranchFinder.CheckForMerge(GitUI.UserControls.RevisionGrid.Graph.RevisionGraphRevision,GitUI.UserControls.RevisionGrid.Graph.RevisionGraphRevision)">
             <summary>
             Checks whether the commit message is a merge message
             and then if its a merge message, sets CommittedTo and MergedWith.
            
             MergedWith is set if it is the current node, i.e. on the first call.
             MergedWith is set to string.Empty if it is no merge.
             First/second branch does not matter because it is the message of the current node.
             </summary>
             <param name="node">the node of the revision to evaluate</param>
             <param name="parent">
             the node's parent in the branch which is currently descended
             (used for the decision whether the node belongs to the first or second branch of the merge)
             </param>
        </member>
        <member name="F:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph._maxScore">
            <summary>
            The max score is used to keep a chronological order during the graph building.
            It is cheaper than doing <c>_nodes.Max(n => n.Score)</c>.
            </summary>
        </member>
        <member name="F:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph._orderedNodesCache">
            <summary>
            The node cache is an ordered list with the nodes.
            This is used so we can draw commits before the graph building is complete.
            </summary>
            <remarks>This cache is very cheap to build.</remarks>
        </member>
        <member name="F:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph._orderedRowCache">
            <summary>
            The ordered row cache contains rows with segments stored in lanes.
            </summary>
            <remarks>This cache is very expensive to build.</remarks>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph.Contains(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Checks whether the given hash is present in the graph.
            </summary>
            <param name="objectId">The hash to find.</param>
            <returns><see langword="true"/>, if the given hash if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph.CacheTo(System.Int32,System.Int32)">
            <summary>
            Builds the revision graph cache. There are two caches that are build in this method.
            <para>Cache 1: an ordered list of the revisions. This is very cheap to build. (_orderedNodesCache).</para>
            <para>Cache 2: an ordered list of all prepared graph rows. This is expensive to build. (_orderedRowCache)</para>
            </summary>
            <param name="currentRowIndex">
            The row that needs to be displayed. This ensures the ordered revisions are available up to this index.
            </param>
            <param name="lastToCacheRowIndex">
            The graph can be build per x rows. This defines the last row index that the graph will build cache to.
            </param>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph.Add(GitUIPluginInterfaces.GitRevision,GitUI.UserControls.RevisionGrid.RevisionNodeFlags)">
            <summary>
            Add a single revision from the git log.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.Graph.RevisionGraph.CheckRowCacheIsDirty(System.Collections.Generic.IList{GitUI.UserControls.RevisionGrid.Graph.RevisionGraphRow},System.Collections.Generic.IList{GitUI.UserControls.RevisionGrid.Graph.RevisionGraphRevision})">
            <summary>
            It is very easy to check if the rowcache is dirty or not. If the last revision added to the rowcache
            is not in the same index in the orderednodecache, the order has been changed. Only then rebuilding is
            required. If the order is changed after this revision, we do not care since it wasn't processed yet.
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.Graph.RevisionGraphRevision.Score">
            <summary>
            The score is used to order the revisions in topo-order. The initial score will be assigned when a revision is loaded
            from the commit log (the result of git.exe). The score will be adjusted, if required, when this revision is added as a parent
            to a revision with a higher score.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.ICheckRefs.Contains(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Checks whether the given hash is present in a collection.
            </summary>
            <param name="objectId">The hash to find.</param>
            <returns><see langword="true"/>, if the given hash if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.MenuUtil.SetAsCaptionMenuItem(System.Windows.Forms.ToolStripMenuItem,System.Windows.Forms.ToolStrip)">
            <summary>
            set the menu item disabled and remove mouse hover effect
            </summary>
        </member>
        <member name="T:GitUI.UserControls.RevisionGrid.MenuUtil.MenuItemBackgroundFilter">
            <summary>
            no mouse over effect for disabled menu items, if the Tag is "caption"
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.NavigationHistory.Push(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Sets <paramref name="curr"/> as current visible item and resets forward history
            </summary>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.NavigationHistory.CanNavigateBackward">
            <summary>
            Returns whether CanNavigateBackward is possible
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.NavigationHistory.NavigateBackward">
            <summary>
            Navigates backward in history, returns item which should be selected, null if no previous item is available
            </summary>
            <exception cref="T:System.InvalidOperationException">When no previous history is available.</exception>
        </member>
        <member name="P:GitUI.UserControls.RevisionGrid.NavigationHistory.CanNavigateForward">
            <summary>
            Returns whether CanNavigateForward is possible
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.NavigationHistory.NavigateForward">
            <summary>
            Navigates forward in history, returns item which should be selected, null if no next item is available
            </summary>
            <exception cref="T:System.InvalidOperationException">When no forward history is available.</exception>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.NavigationHistory.Clear">
            <summary>
            Clears both backward and forward history
            </summary>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.RevisionDataGridView.Contains(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Checks whether the given hash is present in the graph.
            </summary>
            <param name="objectId">The hash to find.</param>
            <returns><see langword="true"/>, if the given hash if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:GitUI.UserControls.RevisionGrid.RevisionGridMenuCommands.CreateOrUpdateMenuCommands">
            <summary>
            ... "Update" because the hotkey settings might change
            </summary>
        </member>
        <member name="F:GitUI.UserControls.Settings.SettingsCheckBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.Settings.SettingsCheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.UserControls.Settings.SettingsCheckBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.TreeViewExtensions.GetFullNamePath(System.Windows.Forms.TreeNode)">
            <summary>
            Similar to TreeNode.FullPath, this function returns a full path made up of TreeNode.Name rather
            than TreeNode.Text, if the former is non-empty. This is useful as it allows the node's Text to
            be changed, while the node's Name can remain a key for operations such as getting and restoring
            the expanded node state.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.TreeViewExtensions.GetExpandedNodesState(System.Windows.Forms.TreeNode)">
            <summary>
            Returns a set of expanded node paths to be used with RestoreExpandedNodeState starting from the input node.
            This function makes use of GetFullNamePath, rather than TreeNode.FullPath, so you can vary the node's Text,
            as long as the node's Name remains stable.
            </summary>
        </member>
        <member name="M:GitUI.UserControls.TreeViewExtensions.RestoreExpandedNodesState(System.Windows.Forms.TreeNode,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Restores the expanded state of nodes under the input node using the set returned by GetExpandedNodesState
            </summary>
        </member>
        <member name="M:GitUI.FileStatusList.SetStashDiffs(GitUIPluginInterfaces.GitRevision,GitUIPluginInterfaces.GitRevision,System.String,System.Collections.Generic.IReadOnlyList{GitCommands.GitItemStatus},GitUIPluginInterfaces.GitRevision,System.String,System.Collections.Generic.IReadOnlyList{GitCommands.GitItemStatus})">
            <summary>
            FormStash init for WorkTree and Index
            </summary>
            <param name="headRev">The GitRevision for HEAD</param>
            <param name="indexRev">The GitRevision for Index</param>
            <param name="indexDesc">The description for Index</param>
            <param name="indexItems">The GitItems for Index</param>
            <param name="workTreeRev">The GitRevision for WorkTree</param>
            <param name="workTreeDesc">The description for WorkTree</param>
            <param name="workTreeItems">The GitItems for WorkTree</param>
        </member>
        <member name="M:GitUI.FileStatusList.OpenSubmoduleAsync">
            <summary>
            Open the currently selected submodule (no checks done) in a new Browse instance
            If the submodule is a diff, both first and currently selected commits are initially selected
            </summary>
            <returns>async Task</returns>
        </member>
        <member name="F:GitUI.FileStatusList.ImageIndexListSorter.ThenBy">
            <summary>
            Secondary sort should be by file path.
            </summary>
        </member>
        <member name="F:GitUI.FileStatusList.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.FileStatusList.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.FileStatusList.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GitUI.Help.HelpImageDisplayUserControl.HelpImageDisplayUserControl_Load(System.Object,System.EventArgs)">
            <summary>
            NOTE: will also be called if designer code calls "this.helpImageDisplayUserControl1.ShowImage2OnHover = true;"
            </summary>
        </member>
        <member name="P:GitUI.Help.HelpImageDisplayUserControl.IsOnHoverShowImage2">
            <summary>
            see also IsOnHoverShowImage2NoticeText
            </summary>
        </member>
        <member name="P:GitUI.Help.HelpImageDisplayUserControl.IsOnHoverShowImage2NoticeText">
            <summary>
            only shown when IsOnHoverShowImage2 is true
            </summary>
        </member>
        <member name="F:GitUI.Help.HelpImageDisplayUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.Help.HelpImageDisplayUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.Help.HelpImageDisplayUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GitUI.MenuStripEx">
            <summary>
            This class adds on to the functionality provided in System.Windows.Forms.ToolStrip.
            </summary>
        </member>
        <member name="P:GitUI.MenuStripEx.ClickThrough">
            <summary>
            Gets or sets whether the ToolStripEx honors item clicks when its containing form does
            not have input focus.
            </summary>
            <remarks>
            Default value is false, which is the same behavior provided by the base ToolStrip class.
            </remarks>
        </member>
        <member name="F:GitUI.PatchGrid.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GitUI.PatchGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GitUI.PatchGrid.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.Changed">
            <summary>
            Number of changed files
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.New">
            <summary>
             Number of new files
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.Deleted">
            <summary>
            Number of deleted files
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.SubmodulesChanged">
            <summary>
            Number of submodules where the commit has changed
            (regardless if they are dirty or not)
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.SubmodulesDirty">
            <summary>
            Number of dirty submodules (with changes that are not committed)
            (regardless if the commit is changed or not)
            </summary>
        </member>
        <member name="P:GitUI.ArtificialCommitChangeCount.HasChanges">
            <summary>
            Any change in any category
            </summary>
        </member>
        <member name="M:GitUI.ArtificialCommitChangeCount.Update(System.Collections.Generic.IReadOnlyList{GitCommands.GitItemStatus})">
            <summary>
            Update the change count
            </summary>
            <param name="items">Git items</param>
        </member>
        <member name="M:GitUI.ArtificialCommitChangeCount.GetSummary">
            <summary>
            Summary for the changes, limited if too big
            </summary>
            <returns>string with changes</returns>
        </member>
        <member name="T:GitUI.QuickSearchProvider">
            <summary>
            Provides a 'quick search' capability to <see cref="T:GitUI.RevisionGridControl"/> whereby the user may type directly
            into the control in order to search for the typed word.
            </summary>
        </member>
        <member name="E:GitUI.RevisionGridControl.ToggledBetweenArtificialAndHeadCommits">
            <summary>
             Occurs whenever a user toggles between the artificial and the HEAD commits
             via the navigation menu item or the shortcut command.
            </summary>
        </member>
        <member name="E:GitUI.RevisionGridControl.RefFilterOptionsChanged">
            <summary>
             Occurs whenever a user toggles between the artificial and the HEAD commits
             via the navigation menu item or the shortcut command.
            </summary>
        </member>
        <member name="P:GitUI.RevisionGridControl.RefFilterOptions">
            <summary>
            Gets or sets the current git reference filter options.
            </summary>
        </member>
        <member name="F:GitUI.RevisionGridControl._ambiguousRefs">
            <summary>
            The set of ref names that are ambiguous.
            Any refs present in this collection should be displayed using their full name.
            </summary>
        </member>
        <member name="F:GitUI.RevisionGridControl._artificialStatus">
            <summary>Tracks status for the artificial commits while the revision graph is reloading</summary>
        </member>
        <member name="P:GitUI.RevisionGridControl.SelectedId">
            <summary>
            The last selected commit in the grid (with related CommitInfo in Browse)
            </summary>
        </member>
        <member name="P:GitUI.RevisionGridControl.FirstId">
            <summary>
            The first selected, the first commit in a diff
            </summary>
        </member>
        <member name="M:GitUI.RevisionGridControl.FindRevisionIndex(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Gets the index of the revision identified by <paramref name="objectId"/>.
            </summary>
            <param name="objectId">Id of the revision to find.</param>
            <returns>Index of the found revision, or <c>-1</c> if not found.</returns>
        </member>
        <member name="M:GitUI.RevisionGridControl.SetSelectedRevision(GitUIPluginInterfaces.ObjectId,System.Boolean)">
            <summary>
            Selects row containing revision matching <paramref name="objectId"/>.
            If the revision is not found, the grid's selection is cleared.
            Returns whether the required revision was found and selected
            </summary>
            <param name="objectId">Id of the revision to select.</param>
            <returns><c>true</c> if the required revision was found and selected, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:GitUI.RevisionGridControl.SelectInitialRevision">
            <summary>
            Select initial revision(s) in the grid
            The SelectedId is the last selected commit in the grid (with related CommitInfo in Browse)
            The FirstId is first selected, the first commit in a diff
            </summary>
        </member>
        <member name="M:GitUI.RevisionGridControl.GitUI#UserControls#RevisionGrid#ICheckRefs#Contains(GitUIPluginInterfaces.ObjectId)">
            <summary>
            Checks whether the given hash is present in the graph.
            </summary>
            <param name="objectId">The hash to find.</param>
            <returns><see langword="true"/>, if the given hash if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:GitUI.RevisionGridControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GitUI.SortDirection.Ascending">
            <summary>
            Sort from smallest to largest. For example, A to Z.
            </summary>
        </member>
        <member name="F:GitUI.SortDirection.Descending">
            <summary>
            Sort from largest to smallest. For example, Z to A.
            </summary>
        </member>
        <member name="T:GitUI.ToolStripEx">
            <summary>
            This class adds on to the functionality provided in System.Windows.Forms.ToolStrip.
            </summary>
        </member>
        <member name="P:GitUI.ToolStripEx.ClickThrough">
            <summary>
            Gets or sets whether the ToolStripEx honors item clicks when its containing form does
            not have input focus.
            </summary>
            <remarks>
            Default value is false, which is the same behavior provided by the base ToolStrip class.
            </remarks>
        </member>
        <member name="P:GitUI.ToolStripEx.DrawBorder">
            <inheritdoc/>
        </member>
        <member name="P:GitUI.ToolStripEx.GripEnabled">
            <summary>
             Gets or sets whether the ToolStrip grip button is enabled.
            </summary>
        </member>
        <member name="T:GitUI.WaitCursorScope">
            <summary>
            Sets the mouse cursor to <see cref="P:System.Windows.Forms.Cursors.WaitCursor"/> to indicate UI activity over some lexical scope.
            </summary>
            <remarks>
            Usage is:
            <code>
            using (WaitCursorScope.Enter())
            {
                // perform UI activity
            }
            </code>
            This pattern ensures:
            <list type="bullet">
            <item>The cursor is always restored when the block exits, whether by fall-through, return or exception.</item>
            <item>Nested scopes work properly. That is, an inner scope doesn't reset the mouse when it exits.
            Only the top-most scope will fully restore the mouse cursor.</item>
            </list>
            </remarks>
        </member>
        <member name="M:GitUI.WaitCursorScope.Enter(System.Windows.Forms.Cursor)">
            <summary>
            Starts a new scope, recording <see cref="P:System.Windows.Forms.Cursor.Current"/> and setting the mouse cursor to <see cref="P:System.Windows.Forms.Cursors.WaitCursor"/>.
            </summary>
        </member>
        <member name="M:GitUI.WaitCursorScope.Dispose">
            <summary>
            Restores <see cref="P:System.Windows.Forms.Cursor.Current"/> to the value captured in the constructor.
            </summary>
        </member>
        <member name="T:GitUI.WindowPosition">
            <summary>
              Stores the state and position of a single window
            </summary>
        </member>
        <member name="M:GitUI.IWindowPositionManager.LoadPosition(System.Windows.Forms.Form)">
            <summary>
            Retrieves a persisted position for the given <paramref name="form"/>.
            </summary>
            <param name="form">The form to look the position for.</param>
            <returns>The form's persisted position; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:GitUI.IWindowPositionManager.SavePosition(System.Windows.Forms.Form)">
            <summary>
              Save the position of a form to the user settings. Hides the window
              as a side-effect.
            </summary>
            <param name="form">The form to save the position for.</param>
        </member>
        <member name="M:GitUI.WindowPositionManager.LoadPosition(System.Windows.Forms.Form)">
            <summary>
            Retrieves a persisted position for the given <paramref name="form"/>.
            </summary>
            <param name="form">The form to look the position for.</param>
            <returns>The form's persisted position; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:GitUI.WindowPositionManager.SavePosition(System.Windows.Forms.Form)">
            <summary>
              Save the position of a form to the user settings. Hides the window
              as a side-effect.
            </summary>
            <param name="form">The form to save the position for.</param>
        </member>
        <member name="T:GitUI.WindowsJumpListManager">
            <summary>
            Provides access to Windows taskbar jumplists features.
            </summary>
            <seealso href="https://www.sevenforums.com/news/44368-developing-windows-7-taskbar-thumbnail-toolbars.html" />
            <seealso href="https://github.com/jlnewton87/Programming/blob/master/C%23/Windows%20API%20Code%20Pack%201.1/source/WindowsAPICodePack/Shell/Taskbar/JumpList.cs" />
            <inheritdoc />
        </member>
        <member name="M:GitUI.WindowsJumpListManager.AddToRecent(System.String)">
            <summary>
            Adds the given working directory to the list of Recent for future quick access.
            </summary>
        </member>
        <member name="P:GitUI.WindowsJumpListManager.NeedsJumpListCreation">
            <summary>
            Indicates if the JumpList creation is still needed
            </summary>
        </member>
        <member name="M:GitUI.WindowsJumpListManager.CreateJumpList(System.IntPtr,GitUI.WindowsThumbnailToolbarButtons)">
            <summary>
            Creates a JumpList for the given application instance.
            It also adds thumbnail toolbars, which are a set of up to seven buttons at the bottom of the taskbar’s icon thumbnail preview.
            </summary>
            <param name="windowHandle">The application instance's main window handle.</param>
            <param name="buttons">The thumbnail toolbar buttons to be added.</param>
        </member>
        <member name="M:GitUI.WindowsJumpListManager.DisableThumbnailToolbar">
            <summary>
            Disables display of thumbnail toolbars.
            </summary>
        </member>
        <member name="M:GitUI.WindowsJumpListManager.MakeIcon(System.Drawing.Image,System.Int32,System.Boolean)">
            <summary>
            Converts an image into an icon.  This was taken off of the interwebs.
            It's on a billion different sites and forum posts, so I would say its creative commons by now. -tekmaven
            </summary>
            <param name="img">The image that shall become an icon</param>
            <param name="size">The width and height of the icon. Standard
            sizes are 16x16, 32x32, 48x48, 64x64.</param>
            <param name="keepAspectRatio">Whether the image should be squashed into a
            square or whether whitespace should be put around it.</param>
            <returns>An icon!!</returns>
        </member>
        <member name="T:System.Interop.BOOL">
            <summary>
             Blittable version of Windows BOOL type. It is convenient in situations where
             manual marshalling is required, or to avoid overhead of regular bool marshalling.
            </summary>
            <remarks>
             Some Windows APIs return arbitrary integer values although the return type is defined
             as BOOL. It is best to never compare BOOL to TRUE. Always use bResult != BOOL.FALSE
             or bResult == BOOL.FALSE .
            </remarks>
        </member>
        <member name="F:System.NativeMethods.LVGS.Normal">
            <summary>
            Groups are expanded, the group name is displayed,
            and all items in the group are displayed.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.Collapsed">
            <summary>
            The group is collapsed.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.Hidden">
            <summary>
            The group is hidden.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.NoHeader">
            <summary>
            Version 6.00 and Windows Vista. The group does not display a header.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.Collapsible">
            <summary>
            Version 6.00 and Windows Vista. The group can be collapsed.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.Focused">
            <summary>
            Version 6.00 and Windows Vista. The group has keyboard focus.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.Selected">
            <summary>
            Version 6.00 and Windows Vista. The group is selected.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.SubSeted">
            <summary>
            Version 6.00 and Windows Vista. The group displays only a portion of its items.
            </summary>
        </member>
        <member name="F:System.NativeMethods.LVGS.SubSetLinkFocused">
            <summary>
            Version 6.00 and Windows Vista. The subset link of the group has keyboard focus.
            </summary>
        </member>
        <member name="T:System.NativeMethods.LVHITTESTFLAGS">
            <summary>
            see http://msdn.microsoft.com/en-us/library/bb774754%28v=VS.85%29.aspx
            </summary>
        </member>
        <member name="T:System.NativeMethods.LVHITTESTINFO">
            <summary>
            see http://msdn.microsoft.com/en-us/library/bb774754%28v=VS.85%29.aspx
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:System.NativeMethods.WM_NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="T:System.NativeMethods.RECTCLS">
            <summary>
            Theming interop requires RECT to be class
            </summary>
        </member>
        <member name="T:System.NativeMethods.SBH">
            <summary>
             Scroll bar values (SB_) that indicates the user's scrolling request in a horizontal scrollbar.
             Used by WM_HSCROLL message.
            </summary>
        </member>
    </members>
</doc>
